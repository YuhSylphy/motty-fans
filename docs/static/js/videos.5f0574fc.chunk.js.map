{"version":3,"file":"static/js/videos.5f0574fc.chunk.js","mappings":"mdAsCMA,EAAiB,SAACC,GAAD,gDACaA,IAEpC,SAASC,IACR,OAAO,wCAOR,IAAMC,GAAwBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAmB,CAChDE,QAAS,cACTC,SAAU,SACVC,UAAW,EACXC,gBAAiB,EACjBC,UAAW,WACXC,gBAAiB,WACjBC,SAAU,UAGX,SAASC,EAAgBC,GAAiD,IAAD,EACxE,OACC,SAACC,EAAA,EAAD,CAASC,MAAK,UAAEF,EAAMG,gBAAR,QAAoB,GAAlC,UACC,SAACd,GAAD,kBAA2BW,GAA3B,IAAkCI,cAAY,EAACC,QAAQ,UAK1D,SAASC,EAAsBN,GAAiD,IAAD,EAC9E,OACC,SAACC,EAAA,EAAD,CAASC,MAAK,UAAEF,EAAMG,gBAAR,QAAoB,GAAlC,UACC,SAACZ,EAAA,GAAD,kBACKS,GADL,IAECK,QAAQ,QACRE,MAAM,iBACNC,MAAM,aAMV,IAAMC,GAA8BnB,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAmB,CACtDE,QAAS,cACTC,SAAU,SACVC,UAAW,EACXC,gBAAiB,EACjBC,UAAW,WACXC,gBAAiB,WACjBC,SAAU,WAGX,SAASY,EAAsBV,GAAiD,IAAD,EAC9E,OACC,SAACC,EAAA,EAAD,CAASC,MAAK,UAAEF,EAAMG,gBAAR,QAAoB,GAAlC,UACC,SAACM,GAAD,kBAAiCT,GAAjC,IAAwCK,QAAQ,aASnD,SAASM,EAAT,GAAiE,IAApCxB,EAAmC,EAAnCA,QAC5B,OACC,SAACyB,EAAA,EAAD,CACCC,KAAM3B,EAAeC,GACrB2B,OAAO,SACPC,eAAe,cAHhB,mBAUF,IAAMC,GAA0B1B,EAAAA,EAAAA,IAAO2B,EAAAA,EAAP3B,CAAoB,CACnD4B,eAAgB,UASjB,SAASC,EAAT,GAA0E,IAAhDC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,IAAKlC,EAAgC,EAAhCA,QACxC,OACC,SAACmC,EAAA,EAAD,CACCT,KAAM3B,EAAeC,GACrB2B,OAAO,SACPC,eAAe,cAHhB,UAKC,SAACQ,EAAA,EAAD,CAAWC,UAAU,MAAMC,IAAiBL,EAAeC,IAAKA,MA8BnE,SAASK,EAAT,GAAkE,IAA7CC,EAA4C,EAA5CA,IAAKC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,SACpC,EApByB,SACzBF,EACAC,EACAC,GAEA,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,cAAY,WAC3BH,EAASI,EAAAA,EAAAA,iBAA+B,CAACP,OACvC,CAACA,IACEQ,GAAYF,EAAAA,EAAAA,cAAY,WAC7BH,EAASI,EAAAA,EAAAA,oBAAkC,CAACP,OAC1C,CAACA,IAEJ,MAAO,CACNK,QAASH,EAAWG,OAAU,EAC9BG,UAAWP,EAAYO,OAAY,GAKLC,CAAkBT,EAAKC,EAAWC,GAAzDG,EAAR,EAAQA,QAASG,EAAjB,EAAiBA,UACjB,OACC,SAACE,EAAD,CACCC,MAAOX,EACPY,KAAK,QACLC,KAAMX,GAAW,SAACY,EAAA,EAAD,SAAiB,EAClCC,UAAWb,EACXc,QAASX,EACTY,SAAUT,IAWb,IAAMU,GAAevD,EAAAA,EAAAA,IAAOwD,EAAAA,EAAPxD,CAAY,IAI3B+C,GAAU/C,EAAAA,EAAAA,IAAOyD,EAAAA,EAAPzD,CAAa,CAC5BQ,SAAU,UAGX,SAASkD,EAAT,GAA8D,IAAzCC,EAAwC,EAAxCA,KAAMrB,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,SACrC,OACC,SAACgB,EAAD,UACEI,EAAKC,KAAI,SAACvB,GAAD,OACT,SAACD,EAAD,CAECC,IAAKA,EACLC,UAAWA,EACXC,SAAUA,GAHLF,QAUV,IAAMwB,GAAS7D,EAAAA,EAAAA,IAAO,MAAPA,EAAc,gBAAG8D,EAAH,EAAGA,MAAH,MAAgB,CAC5CC,OAAQ,MACRC,MAAO,OACPC,OAAO,GAAD,OAAKH,EAAMI,QAAQ,GAAnB,UAGP,SAASC,EAAT,GAA6C,IAAxBC,EAAuB,EAAvBA,IACdC,EAAQD,EAAIE,WAAWC,QACvBC,GAAcC,EAAAA,EAAAA,UACnB,kBACCC,EAAAA,GAAAA,WAAoBN,EAAII,aACtBG,QAAQ,cACRC,SAAS,yBACZ,CAACR,EAAII,cAEN,OACC,UAACK,EAAA,EAAD,YACC,SAAChD,EAAD,CAAgBC,SAAUuC,EAAMS,IAAK/C,IAAKqC,EAAIxD,MAAOf,QAASuE,EAAIW,MAClE,UAACC,EAAA,EAAD,YACC,SAACtB,EAAD,CAAWC,KAAMS,EAAIT,KAAMpB,UAAQ,KACnC,SAACsB,EAAD,KACA,SAACpD,EAAD,UAAkB2D,EAAIxD,SACtB,SAACI,EAAD,UAAwBwD,KACxB,SAACpD,EAAD,UAAwBgD,EAAIa,kBAE7B,SAACvD,EAAD,WACC,SAACL,EAAD,CAAmBxB,QAASuE,EAAIW,UA+BpC,SAASG,EAAT,GAA8C,IAAzBC,EAAwB,EAAxBA,KACpB,EApByB,SAACA,GAC1B,OAA4BC,EAAAA,EAAAA,UAAqB,IAAjD,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAY5C,EAAAA,EAAAA,cAAY,WAC7B,IAAM6C,EAAOH,EAAOI,OANR,GAORN,EAAKM,OAASD,EACjBF,EAAUH,EAAKO,MAAM,EAAGF,IAExBF,GAAU,OAAIH,MAEb,CAACE,EAZS,GAYMC,EAAWH,IAM9B,OAJAQ,EAAAA,EAAAA,YAAU,WACTJ,MACE,CAACJ,IAEG,CAAEE,OAAAA,EAAQE,UAAAA,GAIaK,CAAkBT,GAAxCE,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,UAEhB,OACC,SAACM,EAAA,EAAD,WACC,SAAC,IAAD,CACCC,WAAYT,EAAOI,OACnBD,KAAMD,EACNQ,QAASV,EAAOI,OAASN,EAAKM,OAC9BO,QAAQ,SAAClG,EAAD,IAJT,UAMC,SAACmG,EAAA,GAAD,CAAMC,WAAS,EAAChC,QAAS,EAAzB,SACEmB,EAAOzB,KAAI,SAACQ,GAAD,OACX,SAAC6B,EAAA,GAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,UACC,SAAClC,EAAD,CAAWC,IAAKA,KADaA,EAAIW,aAUxC,IAAMuB,GAA0BtG,EAAAA,EAAAA,IAAOuG,EAAAA,EAAPvG,EAAc,gBAAG8D,EAAH,EAAGA,MAAH,MAAgB,CAC7D0C,UAAW1C,EAAMI,QAAQ,GACzBuC,aAAc3C,EAAMI,QAAQ,GAC5BwC,QAAS5C,EAAMI,QAAQ,OA4FxB,SAASyC,IACR,MA1FkC,WAClC,IAAMnE,GAAWC,EAAAA,EAAAA,MACjB,GAMImE,EAAAA,EAAAA,KAAe,SAACC,GAAD,OAAWA,EAAMC,UANpC,IACCC,UACCpD,EAFF,EAEEA,KAFF,IAGEqD,SAAYC,EAHd,EAGcA,KAAMC,EAHpB,EAGoBA,GAEnBC,EALD,EAKCA,cAGKC,GAAezE,EAAAA,EAAAA,cAGpB,SAAC0E,GACa,OAATA,EACH7E,EAASI,EAAAA,EAAAA,0BACCyE,aAAgB3C,EAAAA,GAC1BlC,EAASI,EAAAA,EAAAA,qBAAmCyE,EAAKC,aACvCD,aAAgBE,KAC1B/E,EAASI,EAAAA,EAAAA,qBAAmCyE,IAE5CG,QAAQC,MAAM,wCAAyCJ,KAGzD,CAAC7E,IAGIkF,GAAa/E,EAAAA,EAAAA,cAGlB,SAAC0E,GACa,OAATA,EACH7E,EAASI,EAAAA,EAAAA,wBACCyE,aAAgB3C,EAAAA,GAC1BlC,EAASI,EAAAA,EAAAA,mBAAiCyE,EAAKC,aACrCD,aAAgBE,KAC1B/E,EAASI,EAAAA,EAAAA,mBAAiCyE,IAE1CG,QAAQC,MAAM,sCAAuCJ,KAGvD,CAAC7E,IAGF,GAAkD4C,EAAAA,EAAAA,YAAlD,eAAOuC,EAAP,KAA0BC,EAA1B,KAEMC,GAA6BlF,EAAAA,EAAAA,cAEjC,SAACmF,GAAD,OAAY,SAACC,EAAA,GAAD,kBAAeD,GAAf,IAAuB9E,MAAM,eAAKjC,QAAQ,gBAAe,IAEjEiH,GAAcrF,EAAAA,EAAAA,cAMnB,SAACsF,EAAOC,EAAQC,GACf,OAAQA,GACP,IAAK,QAGJ,OAFA3F,EAASI,EAAAA,EAAAA,iBAA+B,CAACsF,UACzCN,EAAqB,IAGtB,IAAK,QAEJ,YADAA,EAAqB,IAGtB,IAAK,QAEJ,YADAA,EAAqBM,MAKxB,CAACN,EAAsBpF,IAGxB,MAAO,CACNmB,KAAAA,EACAsD,KAAe,OAATA,EAAgB,IAAIM,KAAKN,GAAQ,KACvCC,GAAW,OAAPA,EAAc,IAAIK,KAAKL,GAAM,KACjCC,cAAAA,EACAQ,kBAAAA,EACAE,2BAAAA,EACAT,aAAAA,EACAM,WAAAA,EACAM,YAAAA,GAeGI,GATHzE,EADD,EACCA,KACAsD,EAFD,EAECA,KACAC,EAHD,EAGCA,GACAC,EAJD,EAICA,cACAQ,EALD,EAKCA,kBACAE,EAND,EAMCA,2BACAT,EAPD,EAOCA,aACAM,EARD,EAQCA,WACAM,EATD,EASCA,YAED,OACC,SAACnC,EAAA,EAAD,WACC,UAACS,EAAD,YACC,SAACrG,EAAA,EAAD,CAAYc,QAAQ,UAApB,UACC,SAACoC,EAAA,EAAD,OAED,UAAC8C,EAAA,GAAD,CAAMC,WAAS,EAAChC,QAAS,EAAzB,WACC,UAAC+B,EAAA,GAAD,CAAME,MAAI,EAACC,GAAI,GAAf,WACC,SAACiC,EAAA,EAAD,CACCC,QAASnB,EACToB,YAAaV,EACbW,eAAa,EACbC,YAAU,EACVC,cAAY,EACZC,aAAW,EACXC,cAAeZ,EACfa,WAAYlB,KAEb,SAACjE,EAAD,CAAWC,KAAMA,EAAMrB,WAAS,QAEjC,UAAC2D,EAAA,GAAD,CAAME,MAAI,EAACC,GAAI,GAAf,WACC,SAAC0C,EAAA,EAAD,CACC9F,MAAM,6CACN+F,YAAY,aACZC,MAAO/B,EACPgC,SAAU7B,EACVmB,YAAa,SAACT,GAAD,OAAY,SAACC,EAAA,GAAD,UAAeD,KACxCoB,WAAS,KAEV,SAACJ,EAAA,EAAD,CACC9F,MAAM,2CACN+F,YAAY,aACZC,MAAO9B,EACP+B,SAAUvB,EACVa,YAAa,SAACT,GAAD,OAAY,SAACC,EAAA,GAAD,UAAeD,KACxCoB,WAAS,eAgDhB,SAASC,IACR,MAxC8B,WAC9B,IAAM3G,GAAWC,EAAAA,EAAAA,MACjB,GAMImE,EAAAA,EAAAA,KAAe,SAACC,GAAD,OAAWA,EAAMC,UALnCsC,EADD,EACCA,KADD,IAECrC,UACCpD,EAHF,EAGEA,KAHF,IAIEqD,SAAYC,EAJd,EAIcA,KAAMC,EAJpB,EAIoBA,GAIdmC,EAA0B,IAAhBD,EAAK3D,QAErBE,EAAAA,EAAAA,YAAU,WACL0D,GACH7G,EAASI,EAAAA,EAAAA,UAER,CAACwG,IAEJ,IAAMjE,GAAOV,EAAAA,EAAAA,UACZ,kBACC,OACI2E,EAAKE,QACP,SAACC,GAAD,OAEkB,IAAhB5F,EAAK8B,QACL9B,EAAK6F,OAAM,SAACC,GAAD,OAAcF,EAAE5F,KAAK+F,SAASD,SAEhC,OAATxC,GAAiBA,GAAQsC,EAAE/E,eACpB,OAAP0C,GAAeqC,EAAE/E,aAAe0C,OAIlCyC,MAAK,SAACC,EAAKC,GAAN,QAAgBD,EAAIpF,YAAcqF,EAAIrF,kBAC9C,CAAC4E,EAAMzF,EAAMsD,EAAMC,IAGpB,MAAO,CAAEmC,QAAAA,EAASlE,KAAAA,GAIQ2E,GAAlBT,EAAR,EAAQA,QAASlE,EAAjB,EAAiBA,KACjB,OAAOkE,GACN,SAACvJ,EAAD,KAEA,UAAC,WAAD,YACC,SAAC6G,EAAD,KACA,SAACzB,EAAD,CAAWC,KAAMA,O,2DCvbd4E,GAAkB,CACvBhF,GAAI,QACJP,YAAaE,EAAAA,GAAAA,QAAiB,wBAAwB4C,WACtD1G,MAAO,QACPqE,YAAa,oBACbX,WAAY,CACXC,QAAS,CACRO,IAAK,QACLd,MAAO,IACPD,OAAQ,IAETiG,OAAQ,CACPlF,IAAK,QACLd,MAAO,IACPD,OAAQ,KAETkG,KAAM,CACLnF,IAAK,QACLd,MAAO,IACPD,OAAQ,MAGVJ,KAAM,IA6BMuG,GAAiB,mCAAG,WAAO/E,GAAP,0FAChCgF,MAAMlD,KAAK,IAAImD,IAAIjF,EAAKkF,SAAQ,qBAAG1G,SAAkB2G,QAAQX,QAD7B,2CAAH,sDCxDjBY,IAAOC,EAAAA,GAAAA,IA1Be,SAACC,GAAD,OAClCA,EAAQC,MACPpB,EAAAA,GAAAA,GAAO1G,EAAAA,EAAAA,KAAAA,QACP+H,EAAAA,EAAAA,IAAc,gBAAD,iBAAiB,0FAC7B/H,EAAAA,EAD6B,SD+D/BgI,MAAM,GAAD,OAAIC,cAAJ,+BACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,gBAAGG,EAAH,EAAGA,MAAH,OACHA,GAASA,EAAMxF,OAAS,EAEvBwF,EAAMrH,KAAI,SAACQ,GAAD,MAAU,CACpBW,GAAIX,EAAIW,GAAGlF,QACX2E,YAAaE,EAAAA,GAAAA,QAAiBN,EAAI8G,QAAQ1G,aAAa8C,WACvD1G,MAAOwD,EAAI8G,QAAQtK,MACnBqE,YAAab,EAAI8G,QAAQjG,YACzBX,WAAYF,EAAI8G,QAAQ5G,WACxBX,KAAMS,EAAIT,MAAQS,EAAIT,KAAK8B,OAAS,GAA9B,OAAsCrB,EAAIT,MAAQ,CAAC,eAPzD,CAACoG,OAUJoB,OAAM,SAACC,GAAD,MAAO,EAAC,kBAAKrB,IAAN,IAAa9E,YAAamG,QC7EV,iDACfC,QADe,iEAKW,SAACZ,GAAD,OAC1CA,EAAQC,MACPpB,EAAAA,GAAAA,GAAO1G,EAAAA,EAAAA,QAAAA,QACP+H,EAAAA,EAAAA,IAAc,uBAAD,mCAAyB,4FAAkBxF,EAAlB,EAASmG,QAAT,KACrC1I,EAAAA,EADqC,SACAsH,GAAkB/E,GADlB,iDACvBoG,iBADuB,4DAAzB,2DAK8B,SAACd,GAAD,OAC5CA,EAAQC,MACPpB,EAAAA,GAAAA,GAAO1G,EAAAA,EAAAA,KAAAA,QACP+H,EAAAA,EAAAA,IAAc,4BAAD,iBAA6B,uGACzC/H,EAAAA,EAAAA,qBACC8B,EAAAA,GAAAA,MAAe8G,MAAM,CAAEC,OAAQ,IAAKnE,aAFI,iDC1B5CoE,EAAAA,EAAAA,IAAanB,IACb,OHieO,WACN,OACC,SAAC,EAAAoB,SAAD,CAAUC,UAAU,SAAC9L,EAAD,IAApB,UACC,SAACqJ,EAAD","sources":["features/videos/component/Videos.tsx","features/videos/core/fetch.ts","features/videos/core/epic.ts","features/videos/lazy.ts"],"sourcesContent":["import React, {\n\tSuspense,\n\tuseCallback,\n\tuseEffect,\n\tuseMemo,\n\tuseState,\n} from 'react';\n\nimport {\n\tAutocomplete,\n\tButton,\n\tCard,\n\tCardActionArea,\n\tCardActions,\n\tCardContent,\n\tCardMedia,\n\tChip,\n\tContainer,\n\tGrid,\n\tPaper,\n\tTextField,\n\tTooltip,\n\tTypography,\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport SearchIcon from '@mui/icons-material/Search';\n\nimport { DateTime } from 'luxon';\n\nimport { useAppDispatch, useAppSelector } from 'src/util';\nimport { videosActions } from '..';\nimport { VideoDef } from '../core/fetch';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { Box } from '@mui/system';\nimport { MobileDatePicker } from '@mui/x-date-pickers/MobileDatePicker';\n\nconst showImage = true;\n\nconst createVideoUrl = (videoId: string) =>\n\t`https://www.youtube.com/watch?v=${videoId}`;\n\nfunction Loader() {\n\treturn <div>Loading...</div>;\n}\n\ntype VideoCardProps = {\n\tdef: VideoDef;\n};\n\nconst TitleStyledTypography = styled(Typography)({\n\tdisplay: '-webkit-box',\n\toverflow: 'hidden',\n\tlineClamp: 2,\n\tWebkitLineClamp: 2,\n\tboxOrient: 'vertical',\n\tWebkitBoxOrient: 'vertical',\n\tfontSize: '.9rem',\n});\n\nfunction TitleTypography(props: React.ComponentProps<typeof Typography>) {\n\treturn (\n\t\t<Tooltip title={props.children ?? ''}>\n\t\t\t<TitleStyledTypography {...props} gutterBottom variant=\"h6\" />\n\t\t</Tooltip>\n\t);\n}\n\nfunction PublishedAtTypography(props: React.ComponentProps<typeof Typography>) {\n\treturn (\n\t\t<Tooltip title={props.children ?? ''}>\n\t\t\t<Typography\n\t\t\t\t{...props}\n\t\t\t\tvariant=\"body2\"\n\t\t\t\tcolor=\"text.secondary\"\n\t\t\t\talign=\"right\"\n\t\t\t/>\n\t\t</Tooltip>\n\t);\n}\n\nconst DescriptionStyledTypography = styled(Typography)({\n\tdisplay: '-webkit-box',\n\toverflow: 'hidden',\n\tlineClamp: 3,\n\tWebkitLineClamp: 3,\n\tboxOrient: 'vertical',\n\tWebkitBoxOrient: 'vertical',\n\tfontSize: '.75rem',\n});\n\nfunction DescriptionTypography(props: React.ComponentProps<typeof Typography>) {\n\treturn (\n\t\t<Tooltip title={props.children ?? ''}>\n\t\t\t<DescriptionStyledTypography {...props} variant=\"body2\" />\n\t\t</Tooltip>\n\t);\n}\n\ntype LinkToMovieButtonProps = {\n\tvideoId: string;\n};\n\nfunction LinkToMovieButton({ videoId }: LinkToMovieButtonProps) {\n\treturn (\n\t\t<Button\n\t\t\thref={createVideoUrl(videoId)}\n\t\t\ttarget=\"_blank\"\n\t\t\treferrerPolicy=\"no-referrer\"\n\t\t>\n\t\t\tWatch\n\t\t</Button>\n\t);\n}\n\nconst RightAlignedCardActions = styled(CardActions)({\n\tjustifyContent: 'right',\n});\n\ntype VideoThumbnailProps = {\n\talt: string;\n\timageUrl: string;\n\tvideoId: string;\n};\n\nfunction VideoThumbnail({ imageUrl, alt, videoId }: VideoThumbnailProps) {\n\treturn (\n\t\t<CardActionArea\n\t\t\thref={createVideoUrl(videoId)}\n\t\t\ttarget=\"_blank\"\n\t\t\treferrerPolicy=\"no-referrer\"\n\t\t>\n\t\t\t<CardMedia component=\"img\" src={showImage ? imageUrl : ''} alt={alt} />\n\t\t</CardActionArea>\n\t);\n}\n\ntype VideoChipProps = {\n\ttag: string;\n\tdeletable?: boolean;\n\tfindable?: boolean;\n};\n\nconst useVideoChipHooks = (\n\ttag: string,\n\tdeletable?: boolean,\n\tfindable?: boolean\n) => {\n\tconst dispatch = useAppDispatch();\n\tconst findTag = useCallback(() => {\n\t\tdispatch(videosActions.addConditionTags([tag]));\n\t}, [tag]);\n\tconst deleteTag = useCallback(() => {\n\t\tdispatch(videosActions.removeConditionTags([tag]));\n\t}, [tag]);\n\n\treturn {\n\t\tfindTag: findable ? findTag : void 0,\n\t\tdeleteTag: deletable ? deleteTag : void 0,\n\t};\n};\n\nfunction VideoChip({ tag, deletable, findable }: VideoChipProps) {\n\tconst { findTag, deleteTag } = useVideoChipHooks(tag, deletable, findable);\n\treturn (\n\t\t<TagChip\n\t\t\tlabel={tag}\n\t\t\tsize=\"small\"\n\t\t\ticon={findable ? <SearchIcon /> : void 0}\n\t\t\tclickable={findable}\n\t\t\tonClick={findTag}\n\t\t\tonDelete={deleteTag}\n\t\t/>\n\t);\n}\n\ntype TagsProps = {\n\ttags: string[];\n\tdeletable?: boolean;\n\tfindable?: boolean;\n};\n\nconst VideoTagsBox = styled(Box)({\n\t// justifyContent: 'right',\n});\n\nconst TagChip = styled(Chip)({\n\tfontSize: '.4rem',\n});\n\nfunction VideoTags({ tags, deletable, findable }: TagsProps) {\n\treturn (\n\t\t<VideoTagsBox>\n\t\t\t{tags.map((tag) => (\n\t\t\t\t<VideoChip\n\t\t\t\t\tkey={tag}\n\t\t\t\t\ttag={tag}\n\t\t\t\t\tdeletable={deletable}\n\t\t\t\t\tfindable={findable}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</VideoTagsBox>\n\t);\n}\n\nconst Spacer = styled('div')(({ theme }) => ({\n\theight: '0px',\n\twidth: '100%',\n\tmargin: `${theme.spacing(1)} 0`,\n}));\n\nfunction VideoCard({ def }: VideoCardProps) {\n\tconst thumb = def.thumbnails.default;\n\tconst publishedAt = useMemo(\n\t\t() =>\n\t\t\tDateTime.fromMillis(def.publishedAt)\n\t\t\t\t.setZone('Asia/Tokyo')\n\t\t\t\t.toFormat('yyyy-MM-dd HH:mm:ss'),\n\t\t[def.publishedAt]\n\t);\n\treturn (\n\t\t<Card>\n\t\t\t<VideoThumbnail imageUrl={thumb.url} alt={def.title} videoId={def.id} />\n\t\t\t<CardContent>\n\t\t\t\t<VideoTags tags={def.tags} findable />\n\t\t\t\t<Spacer />\n\t\t\t\t<TitleTypography>{def.title}</TitleTypography>\n\t\t\t\t<PublishedAtTypography>{publishedAt}</PublishedAtTypography>\n\t\t\t\t<DescriptionTypography>{def.description}</DescriptionTypography>\n\t\t\t</CardContent>\n\t\t\t<RightAlignedCardActions>\n\t\t\t\t<LinkToMovieButton videoId={def.id} />\n\t\t\t</RightAlignedCardActions>\n\t\t</Card>\n\t);\n}\n\ntype VideoBodyProps = {\n\tdefs: VideoDef[];\n};\n\nconst steps = 20;\n\nconst useVideoBodyHooks = (defs: VideoBodyProps['defs']) => {\n\tconst [loaded, setLoaded] = useState<VideoDef[]>([]);\n\n\tconst fetchNext = useCallback(() => {\n\t\tconst next = loaded.length + steps;\n\t\tif (defs.length > next) {\n\t\t\tsetLoaded(defs.slice(0, next));\n\t\t} else {\n\t\t\tsetLoaded([...defs]);\n\t\t}\n\t}, [loaded, steps, setLoaded, defs]);\n\n\tuseEffect(() => {\n\t\tfetchNext(); // 初回\n\t}, [defs]);\n\n\treturn { loaded, fetchNext };\n};\n\nfunction VideoBody({ defs }: VideoBodyProps) {\n\tconst { loaded, fetchNext } = useVideoBodyHooks(defs);\n\n\treturn (\n\t\t<Container>\n\t\t\t<InfiniteScroll\n\t\t\t\tdataLength={loaded.length}\n\t\t\t\tnext={fetchNext}\n\t\t\t\thasMore={loaded.length < defs.length}\n\t\t\t\tloader={<Loader />}\n\t\t\t>\n\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t{loaded.map((def) => (\n\t\t\t\t\t\t<Grid item xs={4} md={3} key={def.id}>\n\t\t\t\t\t\t\t<VideoCard def={def} />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t))}\n\t\t\t\t</Grid>\n\t\t\t</InfiniteScroll>\n\t\t</Container>\n\t);\n}\n\nconst VideoConditionFormPaper = styled(Paper)(({ theme }) => ({\n\tmarginTop: theme.spacing(1),\n\tmarginBottom: theme.spacing(1),\n\tpadding: theme.spacing(1),\n}));\n\nconst useVideoConditionFormHooks = () => {\n\tconst dispatch = useAppDispatch();\n\tconst {\n\t\tcondition: {\n\t\t\ttags,\n\t\t\tdateSpan: { from, to },\n\t\t},\n\t\ttagCandidates,\n\t} = useAppSelector((state) => state.videos);\n\n\tconst onChangeFrom = useCallback<\n\t\tReact.ComponentProps<typeof MobileDatePicker>['onChange']\n\t>(\n\t\t(date) => {\n\t\t\tif (date === null) {\n\t\t\t\tdispatch(videosActions.clearConditionDateFrom());\n\t\t\t} else if (date instanceof DateTime) {\n\t\t\t\tdispatch(videosActions.setConditionDateFrom(date.toMillis()));\n\t\t\t} else if (date instanceof Date) {\n\t\t\t\tdispatch(videosActions.setConditionDateFrom(date));\n\t\t\t} else {\n\t\t\t\tconsole.error('from condition is not a date nor null', date);\n\t\t\t}\n\t\t},\n\t\t[dispatch]\n\t);\n\n\tconst onChangeTo = useCallback<\n\t\tReact.ComponentProps<typeof MobileDatePicker>['onChange']\n\t>(\n\t\t(date) => {\n\t\t\tif (date === null) {\n\t\t\t\tdispatch(videosActions.clearConditionDateTo());\n\t\t\t} else if (date instanceof DateTime) {\n\t\t\t\tdispatch(videosActions.setConditionDateTo(date.toMillis()));\n\t\t\t} else if (date instanceof Date) {\n\t\t\t\tdispatch(videosActions.setConditionDateTo(date));\n\t\t\t} else {\n\t\t\t\tconsole.error('to condition is not a date nor null', date);\n\t\t\t}\n\t\t},\n\t\t[dispatch]\n\t);\n\n\tconst [autocompleteValue, setAutocompleteValue] = useState<string>();\n\n\tconst renderTagAutocompleteInput = useCallback<\n\t\tReact.ComponentProps<typeof Autocomplete>['renderInput']\n\t>((params) => <TextField {...params} label=\"タグ\" variant=\"standard\" />, []);\n\n\tconst onChangeTag = useCallback<\n\t\tExclude<\n\t\t\tReact.ComponentProps<typeof Autocomplete>['onInputChange'],\n\t\t\tundefined\n\t\t>\n\t>(\n\t\t(event, option, reason) => {\n\t\t\tswitch (reason) {\n\t\t\t\tcase 'reset': {\n\t\t\t\t\tdispatch(videosActions.addConditionTags([option]));\n\t\t\t\t\tsetAutocompleteValue('');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcase 'clear': {\n\t\t\t\t\tsetAutocompleteValue('');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcase 'input': {\n\t\t\t\t\tsetAutocompleteValue(option);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[setAutocompleteValue, dispatch]\n\t);\n\n\treturn {\n\t\ttags,\n\t\tfrom: from !== null ? new Date(from) : null,\n\t\tto: to !== null ? new Date(to) : null,\n\t\ttagCandidates,\n\t\tautocompleteValue,\n\t\trenderTagAutocompleteInput,\n\t\tonChangeFrom,\n\t\tonChangeTo,\n\t\tonChangeTag,\n\t};\n};\n\nfunction VideoConditionForm() {\n\tconst {\n\t\ttags,\n\t\tfrom,\n\t\tto,\n\t\ttagCandidates,\n\t\tautocompleteValue,\n\t\trenderTagAutocompleteInput,\n\t\tonChangeFrom,\n\t\tonChangeTo,\n\t\tonChangeTag,\n\t} = useVideoConditionFormHooks();\n\treturn (\n\t\t<Container>\n\t\t\t<VideoConditionFormPaper>\n\t\t\t\t<Typography variant=\"caption\">\n\t\t\t\t\t<SearchIcon />\n\t\t\t\t</Typography>\n\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\toptions={tagCandidates}\n\t\t\t\t\t\t\trenderInput={renderTagAutocompleteInput}\n\t\t\t\t\t\t\tautoHighlight\n\t\t\t\t\t\t\tautoSelect\n\t\t\t\t\t\t\tblurOnSelect\n\t\t\t\t\t\t\tclearOnBlur\n\t\t\t\t\t\t\tonInputChange={onChangeTag}\n\t\t\t\t\t\t\tinputValue={autocompleteValue}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<VideoTags tags={tags} deletable />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<MobileDatePicker\n\t\t\t\t\t\t\tlabel=\"配信・投稿日(from)\"\n\t\t\t\t\t\t\tinputFormat=\"yyyy-MM-dd\"\n\t\t\t\t\t\t\tvalue={from}\n\t\t\t\t\t\t\tonChange={onChangeFrom}\n\t\t\t\t\t\t\trenderInput={(params) => <TextField {...params} />}\n\t\t\t\t\t\t\tclearable\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<MobileDatePicker\n\t\t\t\t\t\t\tlabel=\"配信・投稿日(to)\"\n\t\t\t\t\t\t\tinputFormat=\"yyyy-MM-dd\"\n\t\t\t\t\t\t\tvalue={to}\n\t\t\t\t\t\t\tonChange={onChangeTo}\n\t\t\t\t\t\t\trenderInput={(params) => <TextField {...params} />}\n\t\t\t\t\t\t\tclearable\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</VideoConditionFormPaper>\n\t\t</Container>\n\t);\n}\n\nconst useVideoContainerHooks = () => {\n\tconst dispatch = useAppDispatch();\n\tconst {\n\t\tlist,\n\t\tcondition: {\n\t\t\ttags,\n\t\t\tdateSpan: { from, to },\n\t\t},\n\t} = useAppSelector((state) => state.videos);\n\n\tconst loading = list.length === 0;\n\n\tuseEffect(() => {\n\t\tif (loading) {\n\t\t\tdispatch(videosActions.init());\n\t\t}\n\t}, [list]);\n\n\tconst defs = useMemo(\n\t\t() =>\n\t\t\t[\n\t\t\t\t...list.filter(\n\t\t\t\t\t(d) =>\n\t\t\t\t\t\t// タグ判定\n\t\t\t\t\t\t(tags.length === 0 ||\n\t\t\t\t\t\t\ttags.every((selected) => d.tags.includes(selected))) &&\n\t\t\t\t\t\t// 公開日範囲\n\t\t\t\t\t\t(from === null || from <= d.publishedAt) &&\n\t\t\t\t\t\t(to === null || d.publishedAt <= to)\n\t\t\t\t),\n\t\t\t]\n\t\t\t\t// 公開日降順\n\t\t\t\t.sort((lhs, rhs) => -(lhs.publishedAt - rhs.publishedAt)),\n\t\t[list, tags, from, to]\n\t);\n\n\treturn { loading, defs };\n};\n\nfunction VideoContainer() {\n\tconst { loading, defs } = useVideoContainerHooks();\n\treturn loading ? (\n\t\t<Loader />\n\t) : (\n\t\t<React.Fragment>\n\t\t\t<VideoConditionForm />\n\t\t\t<VideoBody defs={defs} />\n\t\t</React.Fragment>\n\t);\n}\n\nexport function Videos() {\n\treturn (\n\t\t<Suspense fallback={<Loader />}>\n\t\t\t<VideoContainer />\n\t\t</Suspense>\n\t);\n}\n","import { DateTime } from 'luxon';\n\ntype YouTubeId = {\n\tkind: 'youtube#video';\n\tvideoId: string;\n};\n\ntype Resolution = 'default' | 'medium' | 'high';\n\ntype Thumbnail = {\n\turl: string;\n\twidth: number;\n\theight: number;\n};\n\ntype Thumbnails = {\n\t[key in Resolution]: Thumbnail;\n};\n\ntype YouTubeSnippet = {\n\tpublishedAt: string;\n\tchannelId: string;\n\ttitle: string;\n\tdescription: string;\n\tthumbnails: Thumbnails;\n\tchannelTitle: string;\n\tliveBroadcastContent: string;\n\tpublishTime: string;\n};\n\ntype JsonVideoDef = {\n\tkind: 'youtube#searchResult';\n\tetag: string;\n\tid: YouTubeId;\n\tsnippet: YouTubeSnippet;\n\ttags?: string[];\n};\n\ntype JsonType = {\n\titems: JsonVideoDef[];\n};\n\nconst dummy: VideoDef = {\n\tid: 'dummy',\n\tpublishedAt: DateTime.fromISO('2014-09-07T00:00:00Z').toMillis(),\n\ttitle: 'dummy',\n\tdescription: 'no videos fetched',\n\tthumbnails: {\n\t\tdefault: {\n\t\t\turl: 'dummy',\n\t\t\twidth: 120,\n\t\t\theight: 90,\n\t\t},\n\t\tmedium: {\n\t\t\turl: 'dummy',\n\t\t\twidth: 320,\n\t\t\theight: 180,\n\t\t},\n\t\thigh: {\n\t\t\turl: 'dummy',\n\t\t\twidth: 480,\n\t\t\theight: 360,\n\t\t},\n\t},\n\ttags: [],\n};\n\nexport type VideoDef = {\n\tid: string;\n\tpublishedAt: number;\n\ttitle: string;\n\tdescription: string;\n\tthumbnails: Thumbnails;\n\ttags: string[];\n};\n\nexport const fetchVideoDefs = (): Promise<VideoDef[]> =>\n\tfetch(`${process.env.PUBLIC_URL}/assets/videos/videos.json`)\n\t\t.then((res) => res.json())\n\t\t.then(({ items }: JsonType) =>\n\t\t\t!(items && items.length > 0)\n\t\t\t\t? [dummy]\n\t\t\t\t: items.map((def) => ({\n\t\t\t\t\t\tid: def.id.videoId,\n\t\t\t\t\t\tpublishedAt: DateTime.fromISO(def.snippet.publishedAt).toMillis(),\n\t\t\t\t\t\ttitle: def.snippet.title,\n\t\t\t\t\t\tdescription: def.snippet.description,\n\t\t\t\t\t\tthumbnails: def.snippet.thumbnails,\n\t\t\t\t\t\ttags: def.tags && def.tags.length > 0 ? [...def.tags] : ['no tags'],\n\t\t\t\t  }))\n\t\t)\n\t\t.catch((e) => [{ ...dummy, description: e }]);\n\nexport const calcTagCandidates = async (defs: VideoDef[]): Promise<string[]> =>\n\tArray.from(new Set(defs.flatMap(({ tags }) => tags)).keys()).sort();\n","import { combineEpics } from 'redux-observable';\nimport { filter } from 'rxjs/operators';\n\nimport { DateTime } from 'luxon';\n\nimport type { Epic } from 'src/app';\nimport { withIndicator } from 'src/util';\n\nimport { videosActions } from '..';\nimport { calcTagCandidates, fetchVideoDefs } from './fetch';\n\nexport const fetchDefsEpic: Epic = (action$) =>\n\taction$.pipe(\n\t\tfilter(videosActions.init.match),\n\t\twithIndicator('videos/fetch', async () =>\n\t\t\tvideosActions.setList(await fetchVideoDefs())\n\t\t)\n\t);\n\nexport const calcTagCandidatesEpic: Epic = (action$) =>\n\taction$.pipe(\n\t\tfilter(videosActions.setList.match),\n\t\twithIndicator('videos/tag-cadidates', async ({ payload: defs }) =>\n\t\t\tvideosActions.setTagCandidates(await calcTagCandidates(defs))\n\t\t)\n\t);\n\nexport const setDefaultConditionEpic: Epic = (action$) =>\n\taction$.pipe(\n\t\tfilter(videosActions.init.match),\n\t\twithIndicator('videos/default-condition', async () =>\n\t\t\tvideosActions.setConditionDateFrom(\n\t\t\t\tDateTime.now().minus({ months: 3 }).toMillis()\n\t\t\t)\n\t\t)\n\t);\n\nexport const epic = combineEpics(\n\tfetchDefsEpic,\n\tcalcTagCandidatesEpic,\n\tsetDefaultConditionEpic\n);\n","import { registerEpic } from 'src/app';\nimport { Videos } from './component/Videos';\nimport { epic } from './core/epic';\n\nregisterEpic(epic);\nexport default Videos;\n"],"names":["createVideoUrl","videoId","Loader","TitleStyledTypography","styled","Typography","display","overflow","lineClamp","WebkitLineClamp","boxOrient","WebkitBoxOrient","fontSize","TitleTypography","props","Tooltip","title","children","gutterBottom","variant","PublishedAtTypography","color","align","DescriptionStyledTypography","DescriptionTypography","LinkToMovieButton","Button","href","target","referrerPolicy","RightAlignedCardActions","CardActions","justifyContent","VideoThumbnail","imageUrl","alt","CardActionArea","CardMedia","component","src","VideoChip","tag","deletable","findable","dispatch","useAppDispatch","findTag","useCallback","videosActions","deleteTag","useVideoChipHooks","TagChip","label","size","icon","Search","clickable","onClick","onDelete","VideoTagsBox","Box","Chip","VideoTags","tags","map","Spacer","theme","height","width","margin","spacing","VideoCard","def","thumb","thumbnails","default","publishedAt","useMemo","DateTime","setZone","toFormat","Card","url","id","CardContent","description","VideoBody","defs","useState","loaded","setLoaded","fetchNext","next","length","slice","useEffect","useVideoBodyHooks","Container","dataLength","hasMore","loader","Grid","container","item","xs","md","VideoConditionFormPaper","Paper","marginTop","marginBottom","padding","VideoConditionForm","useAppSelector","state","videos","condition","dateSpan","from","to","tagCandidates","onChangeFrom","date","toMillis","Date","console","error","onChangeTo","autocompleteValue","setAutocompleteValue","renderTagAutocompleteInput","params","TextField","onChangeTag","event","option","reason","useVideoConditionFormHooks","Autocomplete","options","renderInput","autoHighlight","autoSelect","blurOnSelect","clearOnBlur","onInputChange","inputValue","MobileDatePicker","inputFormat","value","onChange","clearable","VideoContainer","list","loading","filter","d","every","selected","includes","sort","lhs","rhs","useVideoContainerHooks","dummy","medium","high","calcTagCandidates","Array","Set","flatMap","keys","epic","combineEpics","action$","pipe","withIndicator","fetch","process","then","res","json","items","snippet","catch","e","setList","payload","setTagCandidates","minus","months","registerEpic","Suspense","fallback"],"sourceRoot":""}