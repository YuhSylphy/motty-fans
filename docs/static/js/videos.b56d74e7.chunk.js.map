{"version":3,"file":"static/js/videos.b56d74e7.chunk.js","mappings":"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","sources":["features/videos/component/Videos.tsx","features/videos/core/fetch.ts","features/videos/core/epic.ts","features/videos/lazy.ts"],"sourcesContent":["import React, {\n\tSuspense,\n\tuseCallback,\n\tuseEffect,\n\tuseMemo,\n\tuseState,\n\tuseRef,\n} from 'react';\n\nimport {\n\tAutocomplete,\n\tBox,\n\tButton,\n\tCard,\n\tCardActionArea,\n\tCardActions,\n\tCardContent,\n\tCardMedia,\n\tChip,\n\tContainer,\n\tGrid,\n\tIconButton,\n\tPaper,\n\tTextField,\n\tTooltip,\n\tTypography,\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { MobileDatePicker } from '@mui/x-date-pickers/MobileDatePicker';\n\nimport SearchIcon from '@mui/icons-material/Search';\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\n\nimport { DateTime } from 'luxon';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { animateScroll } from 'react-scroll';\n\nimport {\n\tuseAppDispatch,\n\tuseAppSelector,\n\tuseValueWithMediaQuery,\n} from 'src/util';\n\nimport { videosActions } from '..';\nimport { VideoDef } from '../core/fetch';\nimport { useParams } from 'react-router';\n\nconst showImage = true;\n\nconst createVideoUrl = (videoId: string) =>\n\t`https://www.youtube.com/watch?v=${videoId}`;\n\nfunction Loader() {\n\treturn <div>Loading...</div>;\n}\n\ntype VideoCardProps = {\n\tdef: VideoDef;\n};\n\nconst TitleStyledTypography = styled(Typography)({\n\tdisplay: '-webkit-box',\n\toverflow: 'hidden',\n\tlineClamp: 2,\n\tWebkitLineClamp: 2,\n\tboxOrient: 'vertical',\n\tWebkitBoxOrient: 'vertical',\n\tfontSize: '.9rem',\n});\n\nfunction TitleTypography(props: React.ComponentProps<typeof Typography>) {\n\treturn (\n\t\t<Tooltip title={props.children ?? ''}>\n\t\t\t<TitleStyledTypography {...props} gutterBottom variant=\"h6\" />\n\t\t</Tooltip>\n\t);\n}\n\nfunction PublishedAtTypography(props: React.ComponentProps<typeof Typography>) {\n\treturn (\n\t\t<Tooltip title={props.children ?? ''}>\n\t\t\t<Typography\n\t\t\t\t{...props}\n\t\t\t\tvariant=\"body2\"\n\t\t\t\tcolor=\"text.secondary\"\n\t\t\t\talign=\"right\"\n\t\t\t/>\n\t\t</Tooltip>\n\t);\n}\n\nconst DescriptionStyledTypography = styled(Typography)({\n\tdisplay: '-webkit-box',\n\toverflow: 'hidden',\n\tlineClamp: 3,\n\tWebkitLineClamp: 3,\n\tboxOrient: 'vertical',\n\tWebkitBoxOrient: 'vertical',\n\tfontSize: '.75rem',\n});\n\nfunction DescriptionTypography(props: React.ComponentProps<typeof Typography>) {\n\treturn (\n\t\t<Tooltip title={props.children ?? ''}>\n\t\t\t<DescriptionStyledTypography {...props} variant=\"body2\" />\n\t\t</Tooltip>\n\t);\n}\n\ntype LinkToMovieButtonProps = {\n\tvideoId: string;\n};\n\nfunction LinkToMovieButton({ videoId }: LinkToMovieButtonProps) {\n\treturn (\n\t\t<Button\n\t\t\thref={createVideoUrl(videoId)}\n\t\t\ttarget=\"_blank\"\n\t\t\treferrerPolicy=\"no-referrer\"\n\t\t>\n\t\t\tWatch\n\t\t</Button>\n\t);\n}\n\nconst RightAlignedCardActions = styled(CardActions)({\n\tjustifyContent: 'right',\n});\n\ntype VideoThumbnailProps = {\n\talt: string;\n\timageUrl: string;\n\tvideoId: string;\n};\n\nfunction VideoThumbnail({ imageUrl, alt, videoId }: VideoThumbnailProps) {\n\treturn (\n\t\t<CardActionArea\n\t\t\thref={createVideoUrl(videoId)}\n\t\t\ttarget=\"_blank\"\n\t\t\treferrerPolicy=\"no-referrer\"\n\t\t>\n\t\t\t<CardMedia component=\"img\" src={showImage ? imageUrl : ''} alt={alt} />\n\t\t</CardActionArea>\n\t);\n}\n\ntype VideoChipProps = {\n\ttag: string;\n\tdeletable?: boolean;\n\tfindable?: boolean;\n};\n\nconst useVideoChipHooks = (\n\ttag: string,\n\tdeletable?: boolean,\n\tfindable?: boolean\n) => {\n\tconst dispatch = useAppDispatch();\n\tconst findTag = useCallback(() => {\n\t\tdispatch(videosActions.addConditionTags([tag]));\n\t}, [tag]);\n\tconst deleteTag = useCallback(() => {\n\t\tdispatch(videosActions.removeConditionTags([tag]));\n\t}, [tag]);\n\n\treturn {\n\t\tfindTag: findable ? findTag : void 0,\n\t\tdeleteTag: deletable ? deleteTag : void 0,\n\t};\n};\n\nfunction VideoChip({ tag, deletable, findable }: VideoChipProps) {\n\tconst { findTag, deleteTag } = useVideoChipHooks(tag, deletable, findable);\n\treturn (\n\t\t<TagChip\n\t\t\tlabel={tag}\n\t\t\tsize=\"small\"\n\t\t\ticon={findable ? <SearchIcon /> : void 0}\n\t\t\tclickable={findable}\n\t\t\tonClick={findTag}\n\t\t\tonDelete={deleteTag}\n\t\t/>\n\t);\n}\n\ntype TagsProps = {\n\ttags: string[];\n\tdeletable?: boolean;\n\tfindable?: boolean;\n};\n\nconst VideoTagsBox = styled(Box)({\n\t// justifyContent: 'right',\n});\n\nconst TagChip = styled(Chip)({\n\tfontSize: '.4rem',\n});\n\nfunction VideoTags({ tags, deletable, findable }: TagsProps) {\n\treturn (\n\t\t<VideoTagsBox>\n\t\t\t{tags.map((tag) => (\n\t\t\t\t<VideoChip\n\t\t\t\t\tkey={tag}\n\t\t\t\t\ttag={tag}\n\t\t\t\t\tdeletable={deletable}\n\t\t\t\t\tfindable={findable}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</VideoTagsBox>\n\t);\n}\n\nconst Spacer = styled('div')(({ theme }) => ({\n\theight: '0px',\n\twidth: '100%',\n\tmargin: `${theme.spacing(1)} 0`,\n}));\n\nfunction VideoCard({ def }: VideoCardProps) {\n\tconst thumb = def.thumbnails.high;\n\tconst publishedAt = useMemo(\n\t\t() =>\n\t\t\tDateTime.fromMillis(def.publishedAt)\n\t\t\t\t.setZone('Asia/Tokyo')\n\t\t\t\t.toFormat('yyyy-MM-dd HH:mm:ss'),\n\t\t[def.publishedAt]\n\t);\n\treturn (\n\t\t<Card>\n\t\t\t<VideoThumbnail imageUrl={thumb.url} alt={def.title} videoId={def.id} />\n\t\t\t<CardContent>\n\t\t\t\t<VideoTags tags={def.tags} findable />\n\t\t\t\t<Spacer />\n\t\t\t\t<TitleTypography>{def.title}</TitleTypography>\n\t\t\t\t<PublishedAtTypography>{publishedAt}</PublishedAtTypography>\n\t\t\t\t<DescriptionTypography>{def.description}</DescriptionTypography>\n\t\t\t</CardContent>\n\t\t\t<RightAlignedCardActions>\n\t\t\t\t<LinkToMovieButton videoId={def.id} />\n\t\t\t</RightAlignedCardActions>\n\t\t</Card>\n\t);\n}\n\nconst steps = 20;\n\nfunction ScrollToTop() {\n\treturn (\n\t\t<Box display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t<IconButton\n\t\t\t\taria-label=\"scroll to top\"\n\t\t\t\tcomponent=\"span\"\n\t\t\t\tonClick={animateScroll.scrollToTop}\n\t\t\t>\n\t\t\t\t<ArrowDropUpIcon />\n\t\t\t</IconButton>\n\t\t</Box>\n\t);\n}\n\ntype VideoBodyProps = {\n\tdefs: VideoDef[];\n};\n\nconst useVideoBodyHooks = (defs: VideoBodyProps['defs']) => {\n\tconst [loaded, setLoaded] = useState<VideoDef[]>([]);\n\n\tconst fetchNext = useCallback(() => {\n\t\tconst next = loaded.length + steps;\n\t\tif (defs.length > next) {\n\t\t\tsetLoaded(defs.slice(0, next));\n\t\t} else {\n\t\t\tsetLoaded([...defs]);\n\t\t}\n\t}, [loaded, steps, setLoaded, defs]);\n\n\tuseEffect(() => {\n\t\tfetchNext(); // 初回\n\t}, [defs]);\n\n\tconst itemsPerRow = useValueWithMediaQuery({\n\t\txs: 1,\n\t\tsm: 2,\n\t\tmd: 3,\n\t\tlg: 4,\n\t\txl: 4,\n\t});\n\n\treturn { loaded, fetchNext, itemsPerRow };\n};\n\nconst scrollToTopPerLines = 3;\nfunction VideoBody({ defs }: VideoBodyProps) {\n\tconst { loaded, fetchNext, itemsPerRow } = useVideoBodyHooks(defs);\n\n\treturn (\n\t\t<Container>\n\t\t\t<InfiniteScroll\n\t\t\t\tdataLength={loaded.length}\n\t\t\t\tnext={fetchNext}\n\t\t\t\thasMore={loaded.length < defs.length}\n\t\t\t\tloader={<Loader />}\n\t\t\t>\n\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t{loaded.map((def, ix) => (\n\t\t\t\t\t\t<React.Fragment key={def.id}>\n\t\t\t\t\t\t\t{ix === 0 ||\n\t\t\t\t\t\t\tix % (itemsPerRow * scrollToTopPerLines) !== 0 ? null : (\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<ScrollToTop />\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<Grid item xs={12} sm={6} md={4} lg={3}>\n\t\t\t\t\t\t\t\t<VideoCard def={def} />\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t))}\n\t\t\t\t</Grid>\n\t\t\t</InfiniteScroll>\n\t\t</Container>\n\t);\n}\n\nconst VideoConditionFormPaper = styled(Paper)(({ theme }) => ({\n\tmarginTop: theme.spacing(1),\n\tmarginBottom: theme.spacing(1),\n\tpadding: theme.spacing(1),\n}));\n\nconst useVideoConditionFormHooks = () => {\n\tconst dispatch = useAppDispatch();\n\tconst {\n\t\tcondition: {\n\t\t\ttags,\n\t\t\tdateSpan: { from, to },\n\t\t},\n\t} = useAppSelector((state) => state.videos);\n\n\tconst onChangeFrom = useCallback<\n\t\tReact.ComponentProps<typeof MobileDatePicker>['onChange']\n\t>(\n\t\t(date) => {\n\t\t\tif (date === null) {\n\t\t\t\tdispatch(videosActions.clearConditionDateFrom());\n\t\t\t} else if (date instanceof DateTime) {\n\t\t\t\tdispatch(videosActions.setConditionDateFrom(date.toMillis()));\n\t\t\t} else if (date instanceof Date) {\n\t\t\t\tdispatch(videosActions.setConditionDateFrom(date));\n\t\t\t} else {\n\t\t\t\tconsole.error('from condition is not a date nor null', date);\n\t\t\t}\n\t\t},\n\t\t[dispatch]\n\t);\n\n\tconst onChangeTo = useCallback<\n\t\tReact.ComponentProps<typeof MobileDatePicker>['onChange']\n\t>(\n\t\t(date) => {\n\t\t\tif (date === null) {\n\t\t\t\tdispatch(videosActions.clearConditionDateTo());\n\t\t\t} else if (date instanceof DateTime) {\n\t\t\t\tdispatch(videosActions.setConditionDateTo(date.toMillis()));\n\t\t\t} else if (date instanceof Date) {\n\t\t\t\tdispatch(videosActions.setConditionDateTo(date));\n\t\t\t} else {\n\t\t\t\tconsole.error('to condition is not a date nor null', date);\n\t\t\t}\n\t\t},\n\t\t[dispatch]\n\t);\n\n\tconst [autocompleteValue, setAutocompleteValue] = useState<string>('');\n\n\tconst renderTagAutocompleteInput = useCallback<\n\t\tReact.ComponentProps<typeof Autocomplete>['renderInput']\n\t>((params) => <TextField {...params} label=\"タグ\" variant=\"standard\" />, []);\n\n\tconst onChangeTag = useCallback<\n\t\tExclude<React.ComponentProps<typeof Autocomplete>['onChange'], undefined>\n\t>(\n\t\t(_event, value, reason, _details) => {\n\t\t\tif (typeof value !== 'string') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tswitch (reason) {\n\t\t\t\tcase 'blur': {\n\t\t\t\t\tdispatch(videosActions.addConditionTags([value]));\n\t\t\t\t\tsetAutocompleteValue('');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[dispatch, setAutocompleteValue]\n\t);\n\n\tconst onInputChangeTag = useCallback<\n\t\tExclude<\n\t\t\tReact.ComponentProps<typeof Autocomplete>['onInputChange'],\n\t\t\tundefined\n\t\t>\n\t>(\n\t\t(_event, value, reason) => {\n\t\t\tif (typeof value !== 'string') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tswitch (reason) {\n\t\t\t\tcase 'input': {\n\t\t\t\t\tsetAutocompleteValue(value);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[setAutocompleteValue]\n\t);\n\n\treturn {\n\t\ttags,\n\t\tfrom: from !== null ? new Date(from) : null,\n\t\tto: to !== null ? new Date(to) : null,\n\t\tautocompleteValue,\n\t\trenderTagAutocompleteInput,\n\t\tonChangeFrom,\n\t\tonChangeTo,\n\t\tonChangeTag,\n\t\tonInputChangeTag,\n\t};\n};\n\ntype VideoConditionFormProps = {\n\ttagCandidates: string[];\n};\n\nfunction VideoConditionForm({ tagCandidates }: VideoConditionFormProps) {\n\tconst {\n\t\ttags,\n\t\tfrom,\n\t\tto,\n\t\tautocompleteValue,\n\t\trenderTagAutocompleteInput,\n\t\tonChangeFrom,\n\t\tonChangeTo,\n\t\tonChangeTag,\n\t\tonInputChangeTag,\n\t} = useVideoConditionFormHooks();\n\treturn (\n\t\t<Container>\n\t\t\t<VideoConditionFormPaper>\n\t\t\t\t<Typography variant=\"caption\">\n\t\t\t\t\t<SearchIcon />\n\t\t\t\t</Typography>\n\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\toptions={tagCandidates}\n\t\t\t\t\t\t\trenderInput={renderTagAutocompleteInput}\n\t\t\t\t\t\t\tautoHighlight\n\t\t\t\t\t\t\tautoSelect\n\t\t\t\t\t\t\tblurOnSelect\n\t\t\t\t\t\t\tclearOnBlur\n\t\t\t\t\t\t\tonChange={(event, value, reason, details) => {\n\t\t\t\t\t\t\t\t// console.info('onChange', { event, value, reason, details });\n\t\t\t\t\t\t\t\tonChangeTag(event, value, reason, details);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonInputChange={(event, value, reason) => {\n\t\t\t\t\t\t\t\t// console.info('onInputchange', { event, value, reason });\n\t\t\t\t\t\t\t\tonInputChangeTag(event, value, reason);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t// onHighlightChange={(event, option, reason) => {\n\t\t\t\t\t\t\t// \tconsole.info('onInputchange', { event, option, reason });\n\t\t\t\t\t\t\t// }}\n\t\t\t\t\t\t\t// onClose={(event, reason) => {\n\t\t\t\t\t\t\t// \tconsole.info('onClose', { event, reason });\n\t\t\t\t\t\t\t// }}\n\t\t\t\t\t\t\t// onOpen={(event) => {\n\t\t\t\t\t\t\t// \tconsole.info('onOpen', { event });\n\t\t\t\t\t\t\t// }}\n\t\t\t\t\t\t\t// onInputChange={onChangeTag}\n\t\t\t\t\t\t\tinputValue={autocompleteValue}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<VideoTags tags={tags} deletable />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<MobileDatePicker\n\t\t\t\t\t\t\tlabel=\"配信・投稿日(from)\"\n\t\t\t\t\t\t\tinputFormat=\"yyyy-MM-dd\"\n\t\t\t\t\t\t\tvalue={from}\n\t\t\t\t\t\t\tonChange={onChangeFrom}\n\t\t\t\t\t\t\trenderInput={(params) => <TextField {...params} />}\n\t\t\t\t\t\t\tclearable\n\t\t\t\t\t\t\tshowDaysOutsideCurrentMonth\n\t\t\t\t\t\t\tshowTodayButton\n\t\t\t\t\t\t\tshowToolbar\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<MobileDatePicker\n\t\t\t\t\t\t\tlabel=\"配信・投稿日(to)\"\n\t\t\t\t\t\t\tinputFormat=\"yyyy-MM-dd\"\n\t\t\t\t\t\t\tvalue={to}\n\t\t\t\t\t\t\tonChange={onChangeTo}\n\t\t\t\t\t\t\trenderInput={(params) => <TextField {...params} />}\n\t\t\t\t\t\t\tclearable\n\t\t\t\t\t\t\tshowDaysOutsideCurrentMonth\n\t\t\t\t\t\t\tshowTodayButton\n\t\t\t\t\t\t\tshowToolbar\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</VideoConditionFormPaper>\n\t\t</Container>\n\t);\n}\n\nconst useVideoContainerHooks = () => {\n\tconst initialized = useRef(true);\n\n\tconst dispatch = useAppDispatch();\n\tconst {\n\t\tlist,\n\t\tcondition: {\n\t\t\ttags,\n\t\t\tdateSpan: { from, to },\n\t\t},\n\t} = useAppSelector((state) => state.videos);\n\n\tuseEffect(() => {\n\t\tif (initialized.current) {\n\t\t\tdispatch(videosActions.init());\n\t\t\tinitialized.current = false;\n\t\t}\n\t}, [initialized]);\n\n\tconst defs = useMemo(\n\t\t() =>\n\t\t\t[\n\t\t\t\t...list.filter(\n\t\t\t\t\t(d) =>\n\t\t\t\t\t\t// タグ判定\n\t\t\t\t\t\t(tags.length === 0 ||\n\t\t\t\t\t\t\ttags.every((selected) => d.tags.includes(selected))) &&\n\t\t\t\t\t\t// 公開日範囲\n\t\t\t\t\t\t(from === null || from <= d.publishedAt) &&\n\t\t\t\t\t\t(to === null || d.publishedAt <= to)\n\t\t\t\t),\n\t\t\t]\n\t\t\t\t// 公開日降順\n\t\t\t\t.sort((lhs, rhs) => -(lhs.publishedAt - rhs.publishedAt)),\n\t\t[list, tags, from, to]\n\t);\n\n\tconst tagCandidates = Array.from(\n\t\t(() => {\n\t\t\tconst ret = new Set(defs.flatMap(({ tags }) => tags));\n\t\t\ttags.forEach((selected) => ret.delete(selected));\n\t\t\treturn ret;\n\t\t})().keys()\n\t).sort();\n\n\tconst { hash } = useParams();\n\n\tconst loading = useMemo(() => list.length === 0, [list]);\n\n\treturn { loading, defs, tagCandidates, hash };\n};\n\nfunction VideoContainer() {\n\tconst { loading, defs, tagCandidates } = useVideoContainerHooks();\n\treturn loading ? (\n\t\t<Loader />\n\t) : (\n\t\t<React.Fragment>\n\t\t\t<VideoConditionForm tagCandidates={tagCandidates} />\n\t\t\t<VideoBody defs={defs} />\n\t\t</React.Fragment>\n\t);\n}\n\nexport function Videos() {\n\treturn (\n\t\t<Suspense fallback={<Loader />}>\n\t\t\t<VideoContainer />\n\t\t</Suspense>\n\t);\n}\n","import { DateTime } from 'luxon';\n\ntype YouTubeId = {\n\tkind: 'youtube#video';\n\tvideoId: string;\n};\n\ntype Resolution = 'default' | 'medium' | 'high';\n\ntype Thumbnail = {\n\turl: string;\n\twidth: number;\n\theight: number;\n};\n\ntype Thumbnails = {\n\t[key in Resolution]: Thumbnail;\n};\n\ntype YouTubeSnippet = {\n\tpublishedAt: string;\n\tchannelId: string;\n\ttitle: string;\n\tdescription: string;\n\tthumbnails: Thumbnails;\n\tchannelTitle: string;\n\tliveBroadcastContent: string;\n\tpublishTime: string;\n};\n\ntype JsonVideoDef = {\n\tkind: 'youtube#searchResult';\n\tetag: string;\n\tid: YouTubeId;\n\tsnippet: YouTubeSnippet;\n\ttags?: string[];\n};\n\ntype JsonType = {\n\titems: JsonVideoDef[];\n};\n\nconst dummy: VideoDef = {\n\tid: 'dummy',\n\tpublishedAt: DateTime.fromISO('2014-09-07T00:00:00Z').toMillis(),\n\ttitle: 'dummy',\n\tdescription: 'no videos fetched',\n\tthumbnails: {\n\t\tdefault: {\n\t\t\turl: 'dummy',\n\t\t\twidth: 120,\n\t\t\theight: 90,\n\t\t},\n\t\tmedium: {\n\t\t\turl: 'dummy',\n\t\t\twidth: 320,\n\t\t\theight: 180,\n\t\t},\n\t\thigh: {\n\t\t\turl: 'dummy',\n\t\t\twidth: 480,\n\t\t\theight: 360,\n\t\t},\n\t},\n\ttags: [],\n};\n\nexport type VideoDef = {\n\tid: string;\n\tpublishedAt: number;\n\ttitle: string;\n\tdescription: string;\n\tthumbnails: Thumbnails;\n\ttags: string[];\n};\n\nexport const fetchVideoDefs = (): Promise<VideoDef[]> =>\n\tfetch(`${process.env.PUBLIC_URL}/assets/videos/videos.json`)\n\t\t.then((res) => res.json())\n\t\t.then(({ items }: JsonType) =>\n\t\t\t!(items && items.length > 0)\n\t\t\t\t? [dummy]\n\t\t\t\t: items.map((def) => ({\n\t\t\t\t\t\tid: def.id.videoId,\n\t\t\t\t\t\tpublishedAt: DateTime.fromISO(def.snippet.publishedAt).toMillis(),\n\t\t\t\t\t\ttitle: def.snippet.title,\n\t\t\t\t\t\tdescription: def.snippet.description,\n\t\t\t\t\t\tthumbnails: def.snippet.thumbnails,\n\t\t\t\t\t\ttags: def.tags && def.tags.length > 0 ? [...def.tags] : ['no tags'],\n\t\t\t\t  }))\n\t\t)\n\t\t.catch((e) => [{ ...dummy, description: e }]);\n","import { combineEpics } from 'redux-observable';\nimport { filter } from 'rxjs/operators';\n\nimport { DateTime } from 'luxon';\n\nimport type { Epic } from 'src/app';\nimport { withIndicator } from 'src/util';\n\nimport { videosActions } from '..';\nimport { fetchVideoDefs } from './fetch';\n\nexport const fetchDefsEpic: Epic = (action$) =>\n\taction$.pipe(\n\t\tfilter(videosActions.init.match),\n\t\twithIndicator('videos/fetch', async () =>\n\t\t\tvideosActions.setList(await fetchVideoDefs())\n\t\t)\n\t);\n\nexport const setDefaultConditionEpic: Epic = (action$) =>\n\taction$.pipe(\n\t\tfilter(videosActions.init.match),\n\t\twithIndicator('videos/default-condition', async () =>\n\t\t\tvideosActions.setConditionDateFrom(\n\t\t\t\tDateTime.now().minus({ months: 3 }).toMillis()\n\t\t\t)\n\t\t)\n\t);\n\nexport const epic = combineEpics(fetchDefsEpic, setDefaultConditionEpic);\n","import { registerEpic } from 'src/app';\nimport { Videos } from './component/Videos';\nimport { epic } from './core/epic';\n\nregisterEpic(epic);\nexport default Videos;\n"],"names":["createVideoUrl","videoId","Loader","TitleStyledTypography","styled","Typography","display","overflow","lineClamp","WebkitLineClamp","boxOrient","WebkitBoxOrient","fontSize","TitleTypography","props","Tooltip","title","children","gutterBottom","variant","PublishedAtTypography","color","align","DescriptionStyledTypography","DescriptionTypography","LinkToMovieButton","Button","href","target","referrerPolicy","RightAlignedCardActions","CardActions","justifyContent","VideoThumbnail","imageUrl","alt","CardActionArea","CardMedia","component","src","VideoChip","tag","deletable","findable","dispatch","useAppDispatch","findTag","useCallback","videosActions","deleteTag","useVideoChipHooks","TagChip","label","size","icon","Search","clickable","onClick","onDelete","VideoTagsBox","Box","Chip","VideoTags","tags","map","Spacer","theme","height","width","margin","spacing","VideoCard","def","thumb","thumbnails","high","publishedAt","useMemo","DateTime","setZone","toFormat","Card","url","id","CardContent","description","ScrollToTop","IconButton","animateScroll","ArrowDropUp","VideoBody","defs","useState","loaded","setLoaded","fetchNext","next","length","slice","useEffect","itemsPerRow","useValueWithMediaQuery","xs","sm","md","lg","xl","useVideoBodyHooks","Container","dataLength","hasMore","loader","Grid","container","ix","item","VideoConditionFormPaper","Paper","marginTop","marginBottom","padding","VideoConditionForm","tagCandidates","useAppSelector","state","videos","condition","dateSpan","from","to","onChangeFrom","date","toMillis","Date","console","error","onChangeTo","autocompleteValue","setAutocompleteValue","renderTagAutocompleteInput","params","TextField","onChangeTag","_event","value","reason","_details","onInputChangeTag","useVideoConditionFormHooks","Autocomplete","options","renderInput","autoHighlight","autoSelect","blurOnSelect","clearOnBlur","onChange","event","details","onInputChange","inputValue","MobileDatePicker","inputFormat","clearable","showDaysOutsideCurrentMonth","showTodayButton","showToolbar","VideoContainer","initialized","useRef","list","current","filter","d","every","selected","includes","sort","lhs","rhs","Array","ret","Set","flatMap","forEach","delete","keys","hash","useParams","loading","useVideoContainerHooks","dummy","default","medium","epic","combineEpics","action$","pipe","withIndicator","fetch","process","then","res","json","items","snippet","catch","e","setList","minus","months","registerEpic","Suspense","fallback"],"sourceRoot":""}