{"version":3,"file":"static/js/514.e4795cd2.chunk.js","mappings":"4OAwDaA,EAA0B,WACtC,IAAMC,GAAcC,EAAAA,EAAAA,QAA6B,MAE3CC,GAAOC,EAAAA,EAAAA,KAAe,SAACC,GAAD,OAAWA,EAAMC,UAAUC,QACjDC,GAAOC,EAAAA,EAAAA,UAAQ,kBAhDD,SAACN,GACrB,IAAMO,EAAQ,IAAIC,IACZC,EAAiC,GAuCvC,OArCAT,EAAKU,SAAQ,SAACC,IACRA,EAAIC,OAAUD,EAAIE,UAIvBN,EAAMO,IAAIH,EAAII,KAAM,CACnBC,MAAOL,EAAII,KACXE,MAAM,SAAD,OAAWN,EAAIO,OAIjBP,EAAIQ,aAEFZ,EAAMa,IAAIT,EAAIQ,aAClBZ,EAAMO,IAAIH,EAAIQ,WAAY,CACzBH,MAAOL,EAAIQ,WACXF,MAAO,oBAKTR,EAAMY,KAAK,CAAC,CAAEC,EAAGX,EAAIQ,WAAYI,EAAGZ,EAAII,MAAQ,CAAEE,MAAO,aAGtDN,EAAIa,aACFjB,EAAMa,IAAIT,EAAIa,aAClBjB,EAAMO,IAAIH,EAAIa,WAAY,CACzBR,MAAOL,EAAIa,WACXP,MAAO,kBAKTR,EAAMY,KAAK,CAAC,CAAEC,EAAGX,EAAIa,WAAYD,EAAGZ,EAAII,MAAQ,CAAEE,MAAO,iBAIpD,CAAEV,MAAOkB,MAAMC,KAAKnB,EAAMoB,WAAYlB,MAAAA,GAOlBmB,CAAa5B,KAAO,CAACA,IA2DhD,OAzDA6B,EAAAA,EAAAA,YAAU,WACT,GAAK/B,EAAYgC,QAAjB,CAGA,IAAMC,EAAMC,EAAGC,OAAqCnC,EAAYgC,SAGhE,GAFAC,EAAIG,UAAU,KAAKC,SAEO,IAAtB9B,EAAKE,MAAM6B,QAAsC,IAAtB/B,EAAKI,MAAM2B,OAA1C,CAIA,IAAMC,GAAI,IAAIC,EAAAA,SAAAA,OACZC,SAAS,CACTC,QAAS,OAETC,qBAAoB,iBAAO,MAI7BpC,EAAKE,MAAMG,SAAQ,SAACgC,GACnBL,EAAEM,QAAQD,EAAE,GAAIA,EAAE,OAGnBL,EAAE9B,QAAQG,SAAQ,SAAUY,GAC3B,IAAMsB,EAAOP,EAAEO,KAAKtB,GAEpBsB,EAAKC,GAAKD,EAAKE,GAAK,KAIrBzC,EAAKI,MAAMC,SAAQ,SAACqC,GACnBV,EAAEW,QAAQD,EAAE,GAAIA,EAAE,OAInB,IAAME,EAAS,IAAIX,EAAAA,OACbY,EAAWnB,EAAIoB,OAAO,KAGtBC,EAAOpB,EAAGoB,OAAqCC,GAAG,QAAQ,WAC/DH,EAASI,KAAK,YAAatB,EAAGuB,MAAMC,cAErCzB,EAAI0B,KAAKL,GAGTH,EAAOjB,EAAGC,OAAO,SAAUI,GAG3B,IAAMqB,GACJC,OAAO5B,EAAIuB,KAAK,WAAajB,EAAEuB,QAAQC,OAAS,IAAM,EACxDX,EAASI,KACR,YADD,oBAEcK,OAAOG,MAAMJ,GAAiB,EAAIA,EAFhD,cAKE,CAAC5D,EAAaO,KAGhB,SAAC,WAAD,WACC,gBACC0D,UAAU,kCACVF,MAAM,OACNG,OAAO,OACPC,IAAKnE,OCzHIoE,EAAmB,WAC/B,OACC,UAACC,EAAA,EAAD,YACC,SAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,2BACA,SAACC,EAAA,EAAD,WACC,SAAC,EAAD","sources":["features/family/components/FamilyDiagram.tsx","features/family/components/Family.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useEffect, useMemo, useRef } from 'react';\nimport * as d3 from 'd3';\nimport * as dagreD3 from 'dagre-d3';\nimport type { Edge } from 'dagre-d3';\nimport * as graphlib from 'graphlib';\n\nimport { useAppSelector } from 'src/util';\nimport { HorseDef } from 'src/features/horse-defs';\n\nimport './FamilyDiagram.css';\n\nconst prepareGraph = (defs: HorseDef[]) => {\n\tconst nodes = new Map<string, dagreD3.Label>();\n\tconst edges: [Edge, dagreD3.Label][] = [];\n\n\tdefs.forEach((def) => {\n\t\tif (!def.owned && !def.listed) {\n\t\t\treturn;\n\t\t}\n\t\t// 定義された馬本体\n\t\tnodes.set(def.name, {\n\t\t\tlabel: def.name,\n\t\t\tclass: `owned ${def.sex}`,\n\t\t});\n\n\t\t// 母親\n\t\tif (def.motherName) {\n\t\t\t// 未登録なら非所持馬として追加\n\t\t\tif (!nodes.has(def.motherName)) {\n\t\t\t\tnodes.set(def.motherName, {\n\t\t\t\t\tlabel: def.motherName,\n\t\t\t\t\tclass: 'anothers female',\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// TODO: 所持馬扱いに書き換える\n\t\t\t}\n\t\t\tedges.push([{ v: def.motherName, w: def.name }, { class: 'mother' }]);\n\t\t}\n\n\t\tif (def.fatherName) {\n\t\t\tif (!nodes.has(def.fatherName)) {\n\t\t\t\tnodes.set(def.fatherName, {\n\t\t\t\t\tlabel: def.fatherName,\n\t\t\t\t\tclass: 'anothers male',\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// TODO: 所持馬扱いに書き換える\n\t\t\t}\n\t\t\tedges.push([{ v: def.fatherName, w: def.name }, { class: 'father' }]);\n\t\t}\n\t});\n\n\treturn { nodes: Array.from(nodes.entries()), edges };\n};\n\nexport const FamilyDiagram: React.FC = () => {\n\tconst d3Container = useRef<SVGSVGElement | null>(null);\n\n\tconst defs = useAppSelector((state) => state.horseDefs.list);\n\tconst data = useMemo(() => prepareGraph(defs), [defs]);\n\n\tuseEffect(() => {\n\t\tif (!d3Container.current) {\n\t\t\treturn;\n\t\t}\n\t\tconst svg = d3.select<SVGSVGElement, SVGSVGElement>(d3Container.current);\n\t\tsvg.selectAll('g').remove();\n\n\t\tif (data.nodes.length === 0 && data.edges.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst g = new dagreD3.graphlib.Graph()\n\t\t\t.setGraph({\n\t\t\t\trankdir: 'LR',\n\t\t\t})\n\t\t\t.setDefaultEdgeLabel(() => ({}));\n\n\t\t// Here we're setting nodeclass, which is used by our custom drawNodes function\n\t\t// below.\n\t\tdata.nodes.forEach((n) => {\n\t\t\tg.setNode(n[0], n[1]);\n\t\t});\n\n\t\tg.nodes().forEach(function (v) {\n\t\t\tconst node = g.node(v);\n\t\t\t// Round the corners of the nodes\n\t\t\tnode.rx = node.ry = 5;\n\t\t});\n\n\t\t// Set up edges, no special attributes.\n\t\tdata.edges.forEach((e) => {\n\t\t\tg.setEdge(e[0], e[1]);\n\t\t});\n\n\t\t// Create the renderer\n\t\tconst render = new dagreD3.render();\n\t\tconst svgGroup = svg.append('g');\n\n\t\t// Set up zoom support\n\t\tconst zoom = d3.zoom<SVGSVGElement, SVGSVGElement>().on('zoom', () => {\n\t\t\tsvgGroup.attr('transform', d3.event.transform);\n\t\t});\n\t\tsvg.call(zoom);\n\n\t\t// Run the renderer. This is what draws the final graph.\n\t\trender(d3.select('svg g'), g as unknown as graphlib.Graph);\n\n\t\t// Center the graph\n\t\tconst xCenterOffset =\n\t\t\t(Number(svg.attr('width')) - (g.graph().width || 0)) / 2;\n\t\tsvgGroup.attr(\n\t\t\t'transform',\n\t\t\t`translate(${Number.isNaN(xCenterOffset) ? 0 : xCenterOffset}, 20)`\n\t\t);\n\t\t// svg.attr(\"height\", (g.graph().height || 0) + 40);\n\t}, [d3Container, data]);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<svg\n\t\t\t\tclassName=\"d3-component mottv-derby-family\"\n\t\t\t\twidth=\"100%\"\n\t\t\t\theight=\"70vh\"\n\t\t\t\tref={d3Container}\n\t\t\t/>\n\t\t</React.Fragment>\n\t);\n};\n","import { Box, Paper, Typography } from '@material-ui/core';\nimport * as React from 'react';\nimport { FamilyDiagram } from './FamilyDiagram';\n\nexport const Family: React.FC = () => {\n\treturn (\n\t\t<Box>\n\t\t\t<Typography variant=\"h4\">系図</Typography>\n\t\t\t<Paper>\n\t\t\t\t<FamilyDiagram />\n\t\t\t</Paper>\n\t\t</Box>\n\t);\n};\n"],"names":["FamilyDiagram","d3Container","useRef","defs","useAppSelector","state","horseDefs","list","data","useMemo","nodes","Map","edges","forEach","def","owned","listed","set","name","label","class","sex","motherName","has","push","v","w","fatherName","Array","from","entries","prepareGraph","useEffect","current","svg","d3","select","selectAll","remove","length","g","dagreD3","setGraph","rankdir","setDefaultEdgeLabel","n","setNode","node","rx","ry","e","setEdge","render","svgGroup","append","zoom","on","attr","event","transform","call","xCenterOffset","Number","graph","width","isNaN","className","height","ref","Family","Box","Typography","variant","Paper"],"sourceRoot":""}