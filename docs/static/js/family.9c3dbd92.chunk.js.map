{"version":3,"file":"static/js/family.9c3dbd92.chunk.js","mappings":"kQAwDaA,EAA0B,WACtC,IAAMC,GAAcC,EAAAA,EAAAA,QAA6B,MAE3CC,GAAOC,EAAAA,EAAAA,KAAe,SAACC,GAAD,OAAWA,EAAMC,UAAUC,QACjDC,GAAOC,EAAAA,EAAAA,UAAQ,kBAhDD,SAACN,GACrB,IAAMO,EAAQ,IAAIC,IACZC,EAAiC,GAuCvC,OArCAT,EAAKU,SAAQ,SAACC,IACRA,EAAIC,OAAUD,EAAIE,UAIvBN,EAAMO,IAAIH,EAAII,KAAM,CACnBC,MAAOL,EAAII,KACXE,MAAM,SAAD,OAAWN,EAAIO,OAIjBP,EAAIQ,aAEFZ,EAAMa,IAAIT,EAAIQ,aAClBZ,EAAMO,IAAIH,EAAIQ,WAAY,CACzBH,MAAOL,EAAIQ,WACXF,MAAO,oBAKTR,EAAMY,KAAK,CAAC,CAAEC,EAAGX,EAAIQ,WAAYI,EAAGZ,EAAII,MAAQ,CAAEE,MAAO,aAGtDN,EAAIa,aACFjB,EAAMa,IAAIT,EAAIa,aAClBjB,EAAMO,IAAIH,EAAIa,WAAY,CACzBR,MAAOL,EAAIa,WACXP,MAAO,kBAKTR,EAAMY,KAAK,CAAC,CAAEC,EAAGX,EAAIa,WAAYD,EAAGZ,EAAII,MAAQ,CAAEE,MAAO,iBAIpD,CAAEV,MAAOkB,MAAMC,KAAKnB,EAAMoB,WAAYlB,MAAAA,GAOlBmB,CAAa5B,KAAO,CAACA,IA2DhD,OAzDA6B,EAAAA,EAAAA,YAAU,WACT,GAAK/B,EAAYgC,QAAjB,CAGA,IAAMC,EAAMC,EAAGC,OAAqCnC,EAAYgC,SAGhE,GAFAC,EAAIG,UAAU,KAAKC,SAEO,IAAtB9B,EAAKE,MAAM6B,QAAsC,IAAtB/B,EAAKI,MAAM2B,OAA1C,CAIA,IAAMC,GAAI,IAAIC,EAAAA,SAAAA,OACZC,SAAS,CACTC,QAAS,OAETC,qBAAoB,iBAAO,MAI7BpC,EAAKE,MAAMG,SAAQ,SAACgC,GACnBL,EAAEM,QAAQD,EAAE,GAAIA,EAAE,OAGnBL,EAAE9B,QAAQG,SAAQ,SAAUY,GAC3B,IAAMsB,EAAOP,EAAEO,KAAKtB,GAEpBsB,EAAKC,GAAKD,EAAKE,GAAK,KAIrBzC,EAAKI,MAAMC,SAAQ,SAACqC,GACnBV,EAAEW,QAAQD,EAAE,GAAIA,EAAE,OAInB,IAAME,EAAS,IAAIX,EAAAA,OACbY,EAAWnB,EAAIoB,OAAO,KAGtBC,EAAOpB,EAAGoB,OAAqCC,GAAG,QAAQ,WAC/DH,EAASI,KAAK,YAAatB,EAAGuB,MAAMC,cAErCzB,EAAI0B,KAAKL,GAGTH,EAAOjB,EAAGC,OAAO,SAAUI,GAG3B,IAAMqB,GACJC,OAAO5B,EAAIuB,KAAK,WAAajB,EAAEuB,QAAQC,OAAS,IAAM,EACxDX,EAASI,KACR,YADD,oBAEcK,OAAOG,MAAMJ,GAAiB,EAAIA,EAFhD,cAKE,CAAC5D,EAAaO,KAGhB,SAAC,WAAD,WACC,gBACC0D,UAAU,kCACVF,MAAM,OACNG,OAAO,OACPC,IAAKnE,O,YCzHToE,EAAAA,EAAAA,IAAaC,EAAAA,GAEb,MCCgC,WAC/B,OACC,SAAC,KAAD,WACC,SAACC,EAAA,EAAD,WACC,SAACC,EAAA,EAAD,WACC,SAAC,EAAD,Y,gJCKQF,GAAOG,EAAAA,EAAAA,IARe,SAACC,GAAD,OAClCA,EAAQC,MACPC,EAAAA,EAAAA,GAAOC,EAAAA,GAAAA,KAAAA,QACPC,EAAAA,EAAAA,IAAc,oBAAD,iBAAqB,0FACjCD,EAAAA,GADiC,UACEE,EAAAA,EAAAA,KADF,gCACVxE,KADU,6BAChBU,IADgB","sources":["features/family/components/FamilyDiagram.tsx","features/family/lazy.ts","features/family/components/Family.tsx","features/horse-defs/core/epic.ts"],"sourcesContent":["import * as React from 'react';\r\nimport { useEffect, useMemo, useRef } from 'react';\r\nimport * as d3 from 'd3';\r\nimport * as dagreD3 from 'dagre-d3';\r\nimport type { Edge } from 'dagre-d3';\r\nimport * as graphlib from 'graphlib';\r\n\r\nimport { useAppSelector } from 'src/util';\r\nimport { HorseDef } from 'src/features/horse-defs';\r\n\r\nimport './FamilyDiagram.css';\r\n\r\nconst prepareGraph = (defs: HorseDef[]) => {\r\n\tconst nodes = new Map<string, dagreD3.Label>();\r\n\tconst edges: [Edge, dagreD3.Label][] = [];\r\n\r\n\tdefs.forEach((def) => {\r\n\t\tif (!def.owned && !def.listed) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// 定義された馬本体\r\n\t\tnodes.set(def.name, {\r\n\t\t\tlabel: def.name,\r\n\t\t\tclass: `owned ${def.sex}`,\r\n\t\t});\r\n\r\n\t\t// 母親\r\n\t\tif (def.motherName) {\r\n\t\t\t// 未登録なら非所持馬として追加\r\n\t\t\tif (!nodes.has(def.motherName)) {\r\n\t\t\t\tnodes.set(def.motherName, {\r\n\t\t\t\t\tlabel: def.motherName,\r\n\t\t\t\t\tclass: 'anothers female',\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// TODO: 所持馬扱いに書き換える\r\n\t\t\t}\r\n\t\t\tedges.push([{ v: def.motherName, w: def.name }, { class: 'mother' }]);\r\n\t\t}\r\n\r\n\t\tif (def.fatherName) {\r\n\t\t\tif (!nodes.has(def.fatherName)) {\r\n\t\t\t\tnodes.set(def.fatherName, {\r\n\t\t\t\t\tlabel: def.fatherName,\r\n\t\t\t\t\tclass: 'anothers male',\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// TODO: 所持馬扱いに書き換える\r\n\t\t\t}\r\n\t\t\tedges.push([{ v: def.fatherName, w: def.name }, { class: 'father' }]);\r\n\t\t}\r\n\t});\r\n\r\n\treturn { nodes: Array.from(nodes.entries()), edges };\r\n};\r\n\r\nexport const FamilyDiagram: React.FC = () => {\r\n\tconst d3Container = useRef<SVGSVGElement | null>(null);\r\n\r\n\tconst defs = useAppSelector((state) => state.horseDefs.list);\r\n\tconst data = useMemo(() => prepareGraph(defs), [defs]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!d3Container.current) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst svg = d3.select<SVGSVGElement, SVGSVGElement>(d3Container.current);\r\n\t\tsvg.selectAll('g').remove();\r\n\r\n\t\tif (data.nodes.length === 0 && data.edges.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst g = new dagreD3.graphlib.Graph()\r\n\t\t\t.setGraph({\r\n\t\t\t\trankdir: 'LR',\r\n\t\t\t})\r\n\t\t\t.setDefaultEdgeLabel(() => ({}));\r\n\r\n\t\t// Here we're setting nodeclass, which is used by our custom drawNodes function\r\n\t\t// below.\r\n\t\tdata.nodes.forEach((n) => {\r\n\t\t\tg.setNode(n[0], n[1]);\r\n\t\t});\r\n\r\n\t\tg.nodes().forEach(function (v) {\r\n\t\t\tconst node = g.node(v);\r\n\t\t\t// Round the corners of the nodes\r\n\t\t\tnode.rx = node.ry = 5;\r\n\t\t});\r\n\r\n\t\t// Set up edges, no special attributes.\r\n\t\tdata.edges.forEach((e) => {\r\n\t\t\tg.setEdge(e[0], e[1]);\r\n\t\t});\r\n\r\n\t\t// Create the renderer\r\n\t\tconst render = new dagreD3.render();\r\n\t\tconst svgGroup = svg.append('g');\r\n\r\n\t\t// Set up zoom support\r\n\t\tconst zoom = d3.zoom<SVGSVGElement, SVGSVGElement>().on('zoom', () => {\r\n\t\t\tsvgGroup.attr('transform', d3.event.transform);\r\n\t\t});\r\n\t\tsvg.call(zoom);\r\n\r\n\t\t// Run the renderer. This is what draws the final graph.\r\n\t\trender(d3.select('svg g'), g as unknown as graphlib.Graph);\r\n\r\n\t\t// Center the graph\r\n\t\tconst xCenterOffset =\r\n\t\t\t(Number(svg.attr('width')) - (g.graph().width || 0)) / 2;\r\n\t\tsvgGroup.attr(\r\n\t\t\t'transform',\r\n\t\t\t`translate(${Number.isNaN(xCenterOffset) ? 0 : xCenterOffset}, 20)`\r\n\t\t);\r\n\t\t// svg.attr(\"height\", (g.graph().height || 0) + 40);\r\n\t}, [d3Container, data]);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<svg\r\n\t\t\t\tclassName=\"d3-component mottv-derby-family\"\r\n\t\t\t\twidth=\"100%\"\r\n\t\t\t\theight=\"70vh\"\r\n\t\t\t\tref={d3Container}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n","import { registerEpic } from 'src/app';\nimport { Family } from './components/Family';\nimport { epic } from 'src/features/horse-defs/core/epic';\n\nregisterEpic(epic);\n\nexport default Family;\n","import { Box, Paper } from '@mui/material';\nimport React from 'react';\n\nimport { HorseDefsContainer } from 'src/features/horse-defs';\n\nimport { FamilyDiagram } from './FamilyDiagram';\n\nexport const Family: React.FC = () => {\n\treturn (\n\t\t<HorseDefsContainer>\n\t\t\t<Box>\n\t\t\t\t<Paper>\n\t\t\t\t\t<FamilyDiagram />\n\t\t\t\t</Paper>\n\t\t\t</Box>\n\t\t</HorseDefsContainer>\n\t);\n};\n","import { combineEpics } from 'redux-observable';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport type { Epic } from 'src/app';\r\nimport { withIndicator } from 'src/util';\r\n\r\nimport { horseDefsActions } from '..';\r\nimport { fetchHorseDefs } from './horse';\r\n\r\nexport const fetchDefsEpic: Epic = (action$) =>\r\n\taction$.pipe(\r\n\t\tfilter(horseDefsActions.init.match),\r\n\t\twithIndicator('horse-defs/fetch', async () =>\r\n\t\t\thorseDefsActions.set({ list: await fetchHorseDefs() })\r\n\t\t)\r\n\t);\r\n\r\nexport const epic = combineEpics(fetchDefsEpic);\r\n"],"names":["FamilyDiagram","d3Container","useRef","defs","useAppSelector","state","horseDefs","list","data","useMemo","nodes","Map","edges","forEach","def","owned","listed","set","name","label","class","sex","motherName","has","push","v","w","fatherName","Array","from","entries","prepareGraph","useEffect","current","svg","d3","select","selectAll","remove","length","g","dagreD3","setGraph","rankdir","setDefaultEdgeLabel","n","setNode","node","rx","ry","e","setEdge","render","svgGroup","append","zoom","on","attr","event","transform","call","xCenterOffset","Number","graph","width","isNaN","className","height","ref","registerEpic","epic","Box","Paper","combineEpics","action$","pipe","filter","horseDefsActions","withIndicator","fetchHorseDefs"],"sourceRoot":""}