{"version":3,"sources":["features/mare-line/components/MareLineTree.tsx","features/mare-line/components/MareLine.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","marginLeft","spacing","color","InformationIcon","name","dispatch","useDispatch","handleClick","useMemo","pedigreeActions","push","IconButton","aria-label","size","onClick","fontSize","construct","defs","map","Map","fetchOrCreateNode","id","get","created","label","children","owned","set","forEach","def","node","className","sex","join","icon","faMars","faVenus","faQuestion","fatherName","motherName","setNodeProperty","nodes","Array","from","values","filter","value","has","ids","keys","renderTree","toggleExpand","TreeItem","nodeId","onIconClick","MareLineTree","classes","useState","expanded","setExpanded","useSelector","state","horseDefs","list","length","withIndicatorSync","useEffect","_event","includes","TreeView","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","paper","padding","MareLine","Typography","variant","Paper"],"mappings":"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","file":"static/js/6.d15dca02.chunk.js","sourcesContent":["import { makeStyles, createStyles, Theme, IconButton } from '@material-ui/core';\nimport { TreeItem, TreeView } from '@material-ui/lab';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMars, faQuestion, faVenus } from '@fortawesome/free-solid-svg-icons';\nimport * as React from 'react';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { RootState } from 'src/app';\nimport { withIndicatorSync } from 'src/util';\n\nimport { HorseDef } from 'src/features/horse-defs';\nimport { pedigreeActions } from 'src/features/pedigree';\n\ntype Datum = {\n\tid: string;\n\tlabel: JSX.Element;\n\tclassName?: string;\n\tchildren: Datum[];\n\tfatherName?: string;\n\tmotherName?: string;\n\towned: boolean;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\t'& .name': {\n\t\t\t\tmarginLeft: theme.spacing(0.5),\n\t\t\t},\n\t\t\t'& .father': {\n\t\t\t\tmarginLeft: theme.spacing(1),\n\t\t\t},\n\t\t\t'& .male': {\n\t\t\t\tcolor: '#2196f3',\n\t\t\t},\n\t\t\t'& .female': {\n\t\t\t\tcolor: '#f44336',\n\t\t\t},\n\t\t\t'& .unknown': {\n\t\t\t\tcolor: '#888888',\n\t\t\t},\n\t\t},\n\t})\n);\n\nconst InformationIcon: React.FC<{ name: string }> = ({ name }) => {\n\tconst dispatch = useDispatch();\n\tconst handleClick = useMemo(\n\t\t() => () => {\n\t\t\tdispatch(pedigreeActions.push(name));\n\t\t},\n\t\t[dispatch, name]\n\t);\n\n\treturn (\n\t\t<IconButton aria-label=\"horse info\" size=\"small\" onClick={handleClick}>\n\t\t\t<InfoOutlinedIcon fontSize=\"inherit\" />\n\t\t</IconButton>\n\t);\n};\n\nconst setNodeProperty = (node: Datum, def: HorseDef) => {\n\tnode.owned = node.owned || def.owned;\n\tnode.className = [def.sex].join(' ');\n\tnode.label = (\n\t\t<React.Fragment>\n\t\t\t{(() => {\n\t\t\t\tswitch (def.sex) {\n\t\t\t\t\tcase 'male':\n\t\t\t\t\t\treturn <FontAwesomeIcon icon={faMars} />;\n\t\t\t\t\tcase 'female':\n\t\t\t\t\t\treturn <FontAwesomeIcon icon={faVenus} />;\n\t\t\t\t\tcase 'unknown':\n\t\t\t\t\t\treturn <FontAwesomeIcon icon={faQuestion} />;\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tconst __exhaust: never = def.sex; // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})()}\n\t\t\t<span className=\"name\">\n\t\t\t\t{def.name}\n\t\t\t\t<InformationIcon name={def.name} />\n\t\t\t</span>\n\t\t\t{def.fatherName ? (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t(\n\t\t\t\t\t<span className=\"father male\">\n\t\t\t\t\t\t{def.fatherName}\n\t\t\t\t\t\t<InformationIcon name={def.fatherName} />\n\t\t\t\t\t</span>\n\t\t\t\t\t)\n\t\t\t\t</React.Fragment>\n\t\t\t) : null}\n\t\t</React.Fragment>\n\t);\n\tnode.fatherName = def.fatherName ?? node.fatherName;\n\tnode.motherName = def.motherName ?? node.fatherName;\n};\n\nconst construct = (defs: HorseDef[]): { nodes: Datum[]; ids: string[] } => {\n\tconst map = new Map<string, Datum>();\n\n\tconst fetchOrCreateNode = (id: string) =>\n\t\tmap.get(id) ??\n\t\t(() => {\n\t\t\t// 新規\n\t\t\tconst created: Datum = {\n\t\t\t\tid,\n\t\t\t\tlabel: <React.Fragment />,\n\t\t\t\tchildren: [],\n\t\t\t\towned: false,\n\t\t\t};\n\t\t\tmap.set(id, created);\n\t\t\treturn created;\n\t\t})();\n\n\tconst append = (def: HorseDef) => {\n\t\tconst node = fetchOrCreateNode(def.name);\n\n\t\tsetNodeProperty(node, def);\n\n\t\tif (def.motherName) {\n\t\t\tconst mother = fetchOrCreateNode(def.motherName);\n\t\t\tmother.children.push(node);\n\t\t}\n\t};\n\n\tdefs.forEach(append);\n\treturn {\n\t\tnodes: Array.from(map.values()).filter(\n\t\t\t(value) =>\n\t\t\t\t// 所有場であることは絶対条件\n\t\t\t\tvalue.owned &&\n\t\t\t\t// 母の名前がわからないか\n\t\t\t\t(!value.motherName ||\n\t\t\t\t\t// 母が登録されていないか\n\t\t\t\t\t!map.has(value.motherName) ||\n\t\t\t\t\t// 母はいるけど所有場でないか\n\t\t\t\t\t(map.has(value.motherName) && !map.get(value.motherName)?.owned))\n\t\t),\n\t\tids: Array.from(map.keys()),\n\t};\n};\n\nconst renderTree = (toggleExpand: (node: Datum) => React.MouseEventHandler) =>\n\tfunction MareLineTreeNode(node: Datum) {\n\t\treturn (\n\t\t\t<TreeItem\n\t\t\t\tclassName={node.className}\n\t\t\t\tkey={node.id}\n\t\t\t\tnodeId={node.id}\n\t\t\t\tlabel={node.label}\n\t\t\t\tonIconClick={toggleExpand(node)}\n\t\t\t>\n\t\t\t\t{node.children.map(renderTree(toggleExpand))}\n\t\t\t</TreeItem>\n\t\t);\n\t};\n\nexport const MareLineTree: React.FC = function MareLineTree() {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\tconst [expanded, setExpanded] = useState<string[]>([]);\n\n\tconst defs = useSelector((state: RootState) => state.horseDefs.list);\n\tconst { nodes, ids } = useMemo(() => {\n\t\tif (defs.length > 0) {\n\t\t\treturn withIndicatorSync(dispatch)('mare-line/init')(() =>\n\t\t\t\tconstruct(defs)\n\t\t\t);\n\t\t} else {\n\t\t\treturn { nodes: [], ids: [] };\n\t\t}\n\t}, [dispatch, defs]);\n\n\tuseEffect(() => {\n\t\tsetExpanded(ids);\n\t}, [setExpanded, ids]);\n\n\tconst toggleExpand = useMemo<(node: Datum) => React.MouseEventHandler>(\n\t\t() => (node) => (_event) => {\n\t\t\tsetExpanded(\n\t\t\t\texpanded.includes(node.id)\n\t\t\t\t\t? expanded.filter((id) => id !== node.id)\n\t\t\t\t\t: [...expanded, node.id]\n\t\t\t);\n\t\t},\n\t\t[expanded, setExpanded]\n\t);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<TreeView\n\t\t\t\tclassName={classes.root}\n\t\t\t\texpanded={expanded}\n\t\t\t\tdefaultCollapseIcon={<ExpandMoreIcon />}\n\t\t\t\tdefaultExpandIcon={<ChevronRightIcon />}\n\t\t\t\tdefaultEndIcon={<RemoveIcon />}\n\t\t\t>\n\t\t\t\t{nodes.map(renderTree(toggleExpand))}\n\t\t\t</TreeView>\n\t\t</React.Fragment>\n\t);\n};\n","import * as React from 'react';\nimport { createStyles, Paper, Typography, makeStyles } from '@material-ui/core';\n\nimport { MareLineTree } from './MareLineTree';\n\nconst useStyles = makeStyles((theme) =>\n\tcreateStyles({\n\t\tpaper: {\n\t\t\tpadding: theme.spacing(2),\n\t\t},\n\t})\n);\n\nexport const MareLine: React.FC = () => {\n\tconst classes = useStyles();\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Typography variant=\"h4\">牝系図</Typography>\n\t\t\t<Paper className={classes.paper}>\n\t\t\t\t<MareLineTree />\n\t\t\t</Paper>\n\t\t</React.Fragment>\n\t);\n};\n"],"sourceRoot":""}