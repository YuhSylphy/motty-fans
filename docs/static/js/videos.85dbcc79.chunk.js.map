{"version":3,"file":"static/js/videos.85dbcc79.chunk.js","mappings":"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","sources":["features/videos/core/fetch/base.ts","features/videos/core/types/tags.ts","features/videos/component/Videos.tsx","features/videos/core/fetch/videos.ts","features/videos/core/epic.ts","features/videos/lazy.ts"],"sourcesContent":["import { GamesJson, LiveSeriesJson, VideosJson } from '../types';\n\nconst videosJson = `${process.env.PUBLIC_URL}/assets/videos/videos.json`;\nconst liveSeriesJson = `${process.env.PUBLIC_URL}/assets/live-series/liveSeries.json`;\nconst gamesJson = `${process.env.PUBLIC_URL}/assets/live-series/games.json`;\n\nexport async function fetchVideosJson(): Promise<VideosJson> {\n\tconst res = await fetch(videosJson);\n\tconst ret = await res.json();\n\treturn ret;\n}\n\nexport async function fetchLiveSeriesJson(): Promise<LiveSeriesJson> {\n\tconst res = await fetch(liveSeriesJson);\n\tconst ret = await res.json();\n\treturn ret;\n}\n\nexport async function fetchGamesJson(): Promise<GamesJson> {\n\tconst res = await fetch(gamesJson);\n\tconst ret = await res.json();\n\treturn ret;\n}\n","const tagStyles = [\n\t'none',\n\t'lives',\n\t'series',\n\t'games',\n\t'broadcast',\n\t'video',\n\t'short',\n] as const;\n\nexport type TagStyle = (typeof tagStyles)[number];\n\nexport type VideoTag = {\n\tstyle: TagStyle;\n\tlabel: string;\n};\n\nexport type VideoTagUnion = string | VideoTag;\n\nexport function isVideoTag(arg: unknown | undefined): arg is VideoTag {\n\tif (arg == null || typeof arg !== 'object') return false;\n\tif (!('label' in arg) || typeof arg.label !== 'string') return false;\n\tif (\n\t\t!('style' in arg) ||\n\t\ttypeof arg.style !== 'string' ||\n\t\ttagStyles.includes(arg.style as TagStyle)\n\t)\n\t\treturn false;\n\treturn true;\n}\n\nexport const defaultStyledTag =\n\t<T extends TagStyle>(defaultStyle: T) =>\n\t(tag: VideoTagUnion): VideoTag => {\n\t\tif (typeof tag === 'string') {\n\t\t\treturn {\n\t\t\t\tstyle: defaultStyle,\n\t\t\t\tlabel: tag,\n\t\t\t};\n\t\t} else {\n\t\t\treturn tag;\n\t\t}\n\t};\n","import React, {\n\tSuspense,\n\tuseCallback,\n\tuseEffect,\n\tuseMemo,\n\tuseState,\n} from 'react';\nimport { useParams } from 'react-router';\n\nimport {\n\tAutocomplete,\n\tBox,\n\tButton,\n\tCard,\n\tCardActionArea,\n\tCardActions,\n\tCardContent,\n\tCardMedia,\n\tChip,\n\tContainer,\n\tGrid,\n\tIconButton,\n\tPaper,\n\tTextField,\n\tTooltip,\n\tTypography,\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { DatePicker } from '@mui/x-date-pickers/';\n\nimport SearchIcon from '@mui/icons-material/Search';\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\n\nimport { DateTime } from 'luxon';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { animateScroll } from 'react-scroll';\n\nimport {\n\tuseAppDispatch,\n\tuseAppSelector,\n\tuseValueWithMediaQuery,\n} from 'src/util';\n\nimport { videosActions } from '..';\nimport { VideoDef } from '../core/fetch/videos';\nimport { VideoTag } from '../core/types';\nimport { defaultStyledTag } from '../core/types/utils';\n\nconst showImage = true;\n\nconst createVideoUrl = (videoId: string) =>\n\t`https://www.youtube.com/watch?v=${videoId}`;\n\nfunction Loader() {\n\treturn <div>Loading...</div>;\n}\n\ntype VideoCardProps = {\n\tdef: VideoDef;\n};\n\nconst TitleStyledTypography = styled(Typography)({\n\tdisplay: '-webkit-box',\n\toverflow: 'hidden',\n\tlineClamp: 2,\n\tWebkitLineClamp: 2,\n\tboxOrient: 'vertical',\n\tWebkitBoxOrient: 'vertical',\n\tfontSize: '.9rem',\n});\n\nfunction TitleTypography(props: React.ComponentProps<typeof Typography>) {\n\treturn (\n\t\t<Tooltip title={props.children ?? ''}>\n\t\t\t<TitleStyledTypography {...props} gutterBottom variant=\"h6\" />\n\t\t</Tooltip>\n\t);\n}\n\nfunction PublishedAtTypography(props: React.ComponentProps<typeof Typography>) {\n\treturn (\n\t\t<Tooltip title={props.children ?? ''}>\n\t\t\t<Typography\n\t\t\t\t{...props}\n\t\t\t\tvariant=\"body2\"\n\t\t\t\tcolor=\"text.secondary\"\n\t\t\t\talign=\"right\"\n\t\t\t/>\n\t\t</Tooltip>\n\t);\n}\n\nconst DescriptionStyledTypography = styled(Typography)({\n\tdisplay: '-webkit-box',\n\toverflow: 'hidden',\n\tlineClamp: 3,\n\tWebkitLineClamp: 3,\n\tboxOrient: 'vertical',\n\tWebkitBoxOrient: 'vertical',\n\tfontSize: '.75rem',\n});\n\nfunction DescriptionTypography(props: React.ComponentProps<typeof Typography>) {\n\treturn (\n\t\t<Tooltip title={props.children ?? ''}>\n\t\t\t<DescriptionStyledTypography {...props} variant=\"body2\" />\n\t\t</Tooltip>\n\t);\n}\n\ntype LinkToMovieButtonProps = {\n\tvideoId: string;\n};\n\nfunction LinkToMovieButton({ videoId }: LinkToMovieButtonProps) {\n\treturn (\n\t\t<Button\n\t\t\thref={createVideoUrl(videoId)}\n\t\t\ttarget=\"_blank\"\n\t\t\treferrerPolicy=\"no-referrer\"\n\t\t>\n\t\t\tWatch\n\t\t</Button>\n\t);\n}\n\nconst RightAlignedCardActions = styled(CardActions)({\n\tjustifyContent: 'right',\n});\n\ntype VideoThumbnailProps = {\n\talt: string;\n\timageUrl: string;\n\tvideoId: string;\n};\n\nfunction VideoThumbnail({ imageUrl, alt, videoId }: VideoThumbnailProps) {\n\treturn (\n\t\t<CardActionArea\n\t\t\thref={createVideoUrl(videoId)}\n\t\t\ttarget=\"_blank\"\n\t\t\treferrerPolicy=\"no-referrer\"\n\t\t>\n\t\t\t<CardMedia component=\"img\" src={showImage ? imageUrl : ''} alt={alt} />\n\t\t</CardActionArea>\n\t);\n}\n\ntype VideoChipProps = {\n\ttag: VideoTag;\n\tdeletable?: boolean;\n\tfindable?: boolean;\n};\n\nconst useVideoChipHooks = (\n\t{ label, style }: VideoTag,\n\tdeletable?: boolean,\n\tfindable?: boolean\n) => {\n\tconst dispatch = useAppDispatch();\n\tconst findTag = useCallback(() => {\n\t\tdispatch(videosActions.addConditionTags([label]));\n\t}, [dispatch, label]);\n\tconst deleteTag = useCallback(() => {\n\t\tdispatch(videosActions.removeConditionTags([label]));\n\t}, [dispatch, label]);\n\n\tconst chipColor = useMemo(() => {\n\t\tswitch (style) {\n\t\t\tcase 'none':\n\t\t\t\treturn 'default' as const;\n\t\t\tcase 'lives':\n\t\t\t\treturn 'chipTagsFromLives' as const;\n\t\t\tcase 'series':\n\t\t\t\treturn 'chipTagsFromSeries' as const;\n\t\t\tcase 'games':\n\t\t\t\treturn 'chipTagsFromGames' as const;\n\t\t\tcase 'broadcast':\n\t\t\t\treturn 'chipLiveStylesBroadcast' as const;\n\t\t\tcase 'video':\n\t\t\t\treturn 'chipLiveStylesVideo' as const;\n\t\t\tcase 'short':\n\t\t\t\treturn 'chipLiveStylesShort' as const;\n\t\t\tdefault: {\n\t\t\t\tconst _exhaust: never = style;\n\t\t\t\tthrow _exhaust;\n\t\t\t}\n\t\t}\n\t}, [style]);\n\n\treturn {\n\t\tfindTag: findable ? findTag : void 0,\n\t\tdeleteTag: deletable ? deleteTag : void 0,\n\t\tchipColor,\n\t};\n};\n\nfunction VideoChip({ tag, deletable, findable }: VideoChipProps) {\n\tconst { findTag, deleteTag, chipColor } = useVideoChipHooks(\n\t\ttag,\n\t\tdeletable,\n\t\tfindable\n\t);\n\n\treturn (\n\t\t<TagChip\n\t\t\tlabel={tag.label}\n\t\t\tsize=\"small\"\n\t\t\ticon={findable ? <SearchIcon /> : void 0}\n\t\t\tclickable={findable}\n\t\t\tonClick={findTag}\n\t\t\tonDelete={deleteTag}\n\t\t\tcolor={chipColor}\n\t\t/>\n\t);\n}\n\ntype VideoTagsProps = {\n\ttags: VideoTag[];\n\tdeletable?: boolean;\n\tfindable?: boolean;\n};\n\nconst VideoTagsBox = styled(Box)({\n\t// justifyContent: 'right',\n});\n\nconst TagChip = styled(Chip)({\n\tfontSize: '.6rem',\n});\n\nfunction VideoTags({ tags, deletable, findable }: VideoTagsProps) {\n\treturn (\n\t\t<VideoTagsBox>\n\t\t\t{tags.map((tag) => (\n\t\t\t\t<VideoChip\n\t\t\t\t\tkey={tag.label}\n\t\t\t\t\ttag={tag}\n\t\t\t\t\tdeletable={deletable}\n\t\t\t\t\tfindable={findable}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</VideoTagsBox>\n\t);\n}\n\nconst Spacer = styled('div')(({ theme }) => ({\n\theight: '0px',\n\twidth: '100%',\n\tmargin: `${theme.spacing(1)} 0`,\n}));\n\nfunction VideoCard({ def }: VideoCardProps) {\n\tconst thumb = def.thumbnails.high;\n\tconst publishedAt = useMemo(\n\t\t() =>\n\t\t\tDateTime.fromMillis(def.publishedAt)\n\t\t\t\t.setZone('Asia/Tokyo')\n\t\t\t\t.toFormat('yyyy-MM-dd HH:mm:ss'),\n\t\t[def.publishedAt]\n\t);\n\treturn (\n\t\t<Card>\n\t\t\t<VideoThumbnail imageUrl={thumb.url} alt={def.title} videoId={def.id} />\n\t\t\t<CardContent>\n\t\t\t\t<VideoTags tags={def.tags} findable />\n\t\t\t\t<Spacer />\n\t\t\t\t<TitleTypography>{def.title}</TitleTypography>\n\t\t\t\t<PublishedAtTypography>{publishedAt}</PublishedAtTypography>\n\t\t\t\t<DescriptionTypography>{def.description}</DescriptionTypography>\n\t\t\t</CardContent>\n\t\t\t<RightAlignedCardActions>\n\t\t\t\t<LinkToMovieButton videoId={def.id} />\n\t\t\t</RightAlignedCardActions>\n\t\t</Card>\n\t);\n}\n\nconst steps = 20;\n\nfunction ScrollToTop() {\n\treturn (\n\t\t<Box display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t<IconButton\n\t\t\t\taria-label=\"scroll to top\"\n\t\t\t\tcomponent=\"span\"\n\t\t\t\tonClick={animateScroll.scrollToTop}\n\t\t\t>\n\t\t\t\t<ArrowDropUpIcon />\n\t\t\t</IconButton>\n\t\t</Box>\n\t);\n}\n\ntype VideoBodyProps = {\n\tdefs: VideoDef[];\n};\n\nconst useVideoBodyHooks = (defs: VideoBodyProps['defs']) => {\n\tconst [loaded, setLoaded] = useState<VideoDef[]>([]);\n\n\tconst fetchNext = useCallback(() => {\n\t\tconst next = loaded.length + steps;\n\t\tif (defs.length > next) {\n\t\t\tsetLoaded(defs.slice(0, next));\n\t\t} else {\n\t\t\tsetLoaded([...defs]);\n\t\t}\n\t}, [loaded, setLoaded, defs]);\n\n\tuseEffect(() => {\n\t\tfetchNext(); // 初回\n\t}, [fetchNext]);\n\n\tconst itemsPerRow = useValueWithMediaQuery({\n\t\txs: 1,\n\t\tsm: 2,\n\t\tmd: 3,\n\t\tlg: 4,\n\t\txl: 4,\n\t});\n\n\treturn { loaded, fetchNext, itemsPerRow };\n};\n\nconst scrollToTopPerLines = 3;\nfunction VideoBody({ defs }: VideoBodyProps) {\n\tconst { loaded, fetchNext, itemsPerRow } = useVideoBodyHooks(defs);\n\n\treturn (\n\t\t<Container>\n\t\t\t<InfiniteScroll\n\t\t\t\tdataLength={loaded.length}\n\t\t\t\tnext={fetchNext}\n\t\t\t\thasMore={loaded.length < defs.length}\n\t\t\t\tloader={<Loader />}\n\t\t\t>\n\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t{loaded.map((def, ix) => (\n\t\t\t\t\t\t<React.Fragment key={def.id}>\n\t\t\t\t\t\t\t{ix === 0 ||\n\t\t\t\t\t\t\tix % (itemsPerRow * scrollToTopPerLines) !== 0 ? null : (\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<ScrollToTop />\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<Grid item xs={12} sm={6} md={4} lg={3}>\n\t\t\t\t\t\t\t\t<VideoCard def={def} />\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t))}\n\t\t\t\t</Grid>\n\t\t\t</InfiniteScroll>\n\t\t</Container>\n\t);\n}\n\nconst VideoConditionFormPaper = styled(Paper)(({ theme }) => ({\n\tmarginTop: theme.spacing(1),\n\tmarginBottom: theme.spacing(1),\n\tpadding: theme.spacing(1),\n}));\n\nconst useVideoConditionFormHooks = () => {\n\tconst dispatch = useAppDispatch();\n\tconst {\n\t\tcondition: {\n\t\t\ttags: tagLabels,\n\t\t\tdateSpan: { from, to },\n\t\t},\n\t} = useAppSelector((state) => state.videos);\n\n\tconst onChangeFrom = useCallback<\n\t\tExclude<React.ComponentProps<typeof DatePicker>['onChange'], undefined>\n\t>(\n\t\t(date) => {\n\t\t\tif (date === null) {\n\t\t\t\tdispatch(videosActions.clearConditionDateFrom());\n\t\t\t} else if (date instanceof DateTime) {\n\t\t\t\tdispatch(videosActions.setConditionDateFrom(date.toMillis()));\n\t\t\t\t// } else if (date instanceof Date) {\n\t\t\t\t// \tdispatch(videosActions.setConditionDateFrom(date));\n\t\t\t} else {\n\t\t\t\tconsole.error('from condition is not a date nor null', date);\n\t\t\t}\n\t\t},\n\t\t[dispatch]\n\t);\n\n\tconst onChangeTo = useCallback<\n\t\tExclude<React.ComponentProps<typeof DatePicker>['onChange'], undefined>\n\t>(\n\t\t(date) => {\n\t\t\tif (date === null) {\n\t\t\t\tdispatch(videosActions.clearConditionDateTo());\n\t\t\t} else if (date instanceof DateTime) {\n\t\t\t\tdispatch(videosActions.setConditionDateTo(date.toMillis()));\n\t\t\t\t// } else if (date instanceof Date) {\n\t\t\t\t// \tdispatch(videosActions.setConditionDateTo(date));\n\t\t\t} else {\n\t\t\t\tconsole.error('to condition is not a date nor null', date);\n\t\t\t}\n\t\t},\n\t\t[dispatch]\n\t);\n\n\tconst [autocompleteValue, setAutocompleteValue] = useState<string>('');\n\n\tconst renderTagAutocompleteInput = useCallback<\n\t\tReact.ComponentProps<typeof Autocomplete>['renderInput']\n\t>((params) => <TextField {...params} label=\"タグ\" variant=\"standard\" />, []);\n\n\tconst onChangeTag = useCallback<\n\t\tExclude<React.ComponentProps<typeof Autocomplete>['onChange'], undefined>\n\t>(\n\t\t(_event, value, reason, _details) => {\n\t\t\tif (typeof value !== 'string') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tswitch (reason) {\n\t\t\t\tcase 'blur': {\n\t\t\t\t\tdispatch(videosActions.addConditionTags([value]));\n\t\t\t\t\tsetAutocompleteValue('');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[dispatch, setAutocompleteValue]\n\t);\n\n\tconst onInputChangeTag = useCallback<\n\t\tExclude<\n\t\t\tReact.ComponentProps<typeof Autocomplete>['onInputChange'],\n\t\t\tundefined\n\t\t>\n\t>(\n\t\t(_event, value, reason) => {\n\t\t\tif (typeof value !== 'string') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tswitch (reason) {\n\t\t\t\tcase 'input': {\n\t\t\t\t\tsetAutocompleteValue(value);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[setAutocompleteValue]\n\t);\n\n\tconst isOptionEqualToValue = useCallback<\n\t\tExclude<\n\t\t\tReact.ComponentProps<typeof Autocomplete>['isOptionEqualToValue'],\n\t\t\tundefined\n\t\t>\n\t>((option, value) => {\n\t\t// TODO: fix MUI: The value provided to Autocomplete is invalid.\n\t\t// None of the options match with `\"Nintendo World Championships ファミコン世界大会\"`.\n\t\t// You can use the `isOptionEqualToValue` prop to customize the equality test.\n\t\treturn option === value;\n\t}, []);\n\n\tconst tags = useMemo(\n\t\t() => tagLabels.map(defaultStyledTag('none')),\n\t\t[tagLabels]\n\t);\n\n\treturn {\n\t\ttags,\n\t\tfrom: from !== null ? DateTime.fromMillis(from) : null,\n\t\tto: to !== null ? DateTime.fromMillis(to) : null,\n\t\tautocompleteValue,\n\t\trenderTagAutocompleteInput,\n\t\tonChangeFrom,\n\t\tonChangeTo,\n\t\tonChangeTag,\n\t\tonInputChangeTag,\n\t\tisOptionEqualToValue,\n\t};\n};\n\ntype VideoConditionFormProps = {\n\ttagCandidates: string[];\n};\n\nfunction VideoConditionForm({ tagCandidates }: VideoConditionFormProps) {\n\tconst {\n\t\ttags,\n\t\tfrom,\n\t\tto,\n\t\tautocompleteValue,\n\t\trenderTagAutocompleteInput,\n\t\tonChangeFrom,\n\t\tonChangeTo,\n\t\tonChangeTag,\n\t\tonInputChangeTag,\n\t\tisOptionEqualToValue,\n\t} = useVideoConditionFormHooks();\n\treturn (\n\t\t<Container>\n\t\t\t<VideoConditionFormPaper>\n\t\t\t\t<Typography variant=\"caption\">\n\t\t\t\t\t<SearchIcon />\n\t\t\t\t</Typography>\n\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\toptions={tagCandidates}\n\t\t\t\t\t\t\trenderInput={renderTagAutocompleteInput}\n\t\t\t\t\t\t\tisOptionEqualToValue={isOptionEqualToValue}\n\t\t\t\t\t\t\tautoHighlight\n\t\t\t\t\t\t\tautoSelect\n\t\t\t\t\t\t\tblurOnSelect\n\t\t\t\t\t\t\tclearOnBlur\n\t\t\t\t\t\t\tonChange={(event, value, reason, details) => {\n\t\t\t\t\t\t\t\t// console.info('onChange', { event, value, reason, details });\n\t\t\t\t\t\t\t\tonChangeTag(event, value, reason, details);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonInputChange={(event, value, reason) => {\n\t\t\t\t\t\t\t\t// console.info('onInputchange', { event, value, reason });\n\t\t\t\t\t\t\t\tonInputChangeTag(event, value, reason);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t// onHighlightChange={(event, option, reason) => {\n\t\t\t\t\t\t\t// \tconsole.info('onInputchange', { event, option, reason });\n\t\t\t\t\t\t\t// }}\n\t\t\t\t\t\t\t// onClose={(event, reason) => {\n\t\t\t\t\t\t\t// \tconsole.info('onClose', { event, reason });\n\t\t\t\t\t\t\t// }}\n\t\t\t\t\t\t\t// onOpen={(event) => {\n\t\t\t\t\t\t\t// \tconsole.info('onOpen', { event });\n\t\t\t\t\t\t\t// }}\n\t\t\t\t\t\t\t// onInputChange={onChangeTag}\n\t\t\t\t\t\t\tinputValue={autocompleteValue}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<VideoTags tags={tags} deletable />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\tlabel=\"配信・投稿日(from)\"\n\t\t\t\t\t\t\tformat=\"yyyy-MM-dd\"\n\t\t\t\t\t\t\tvalue={from}\n\t\t\t\t\t\t\tonChange={onChangeFrom}\n\t\t\t\t\t\t\t// renderInput={(params) => <TextField {...params} />}\n\t\t\t\t\t\t\t// clearable\n\t\t\t\t\t\t\tshowDaysOutsideCurrentMonth\n\t\t\t\t\t\t\t// showTodayButton\n\t\t\t\t\t\t\t// showToolbar\n\t\t\t\t\t\t\tslotProps={{\n\t\t\t\t\t\t\t\tactionBar: { actions: ['clear', 'today', 'cancel', 'accept'] },\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\tlabel=\"配信・投稿日(to)\"\n\t\t\t\t\t\t\tformat=\"yyyy-MM-dd\"\n\t\t\t\t\t\t\tvalue={to}\n\t\t\t\t\t\t\tonChange={onChangeTo}\n\t\t\t\t\t\t\t// renderInput={(params) => <TextField {...params} />}\n\t\t\t\t\t\t\t// clearable\n\t\t\t\t\t\t\tshowDaysOutsideCurrentMonth\n\t\t\t\t\t\t\t// showTodayButton\n\t\t\t\t\t\t\t// showToolbar\n\t\t\t\t\t\t\tslotProps={{\n\t\t\t\t\t\t\t\tactionBar: { actions: ['clear', 'today', 'cancel', 'accept'] },\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</VideoConditionFormPaper>\n\t\t</Container>\n\t);\n}\n\nconst useVideoContainerHooks = () => {\n\tconst [toBeInitialized, setToBeInitialized] = useState(true);\n\n\tconst dispatch = useAppDispatch();\n\tconst {\n\t\tloaded,\n\t\tlist,\n\t\tcondition: {\n\t\t\ttags,\n\t\t\tdateSpan: { from, to },\n\t\t},\n\t} = useAppSelector((state) => state.videos);\n\n\tuseEffect(() => {\n\t\tif (toBeInitialized) {\n\t\t\tdispatch(videosActions.init());\n\t\t\tsetToBeInitialized(false);\n\t\t}\n\t}, [toBeInitialized, setToBeInitialized, dispatch]);\n\n\tconst defs = useMemo(\n\t\t() =>\n\t\t\t[\n\t\t\t\t...list.filter(\n\t\t\t\t\t(d) =>\n\t\t\t\t\t\t// タグ判定\n\t\t\t\t\t\t(tags.length === 0 ||\n\t\t\t\t\t\t\t((labels: string[]) =>\n\t\t\t\t\t\t\t\ttags.every((selected) => labels.includes(selected)))(\n\t\t\t\t\t\t\t\td.tags.map(({ label }) => label)\n\t\t\t\t\t\t\t)) &&\n\t\t\t\t\t\t// 公開日範囲\n\t\t\t\t\t\t(from === null || from <= d.publishedAt) &&\n\t\t\t\t\t\t(to === null || d.publishedAt <= to)\n\t\t\t\t),\n\t\t\t]\n\t\t\t\t// 公開日降順\n\t\t\t\t.sort((lhs, rhs) => -(lhs.publishedAt - rhs.publishedAt)),\n\t\t[list, tags, from, to]\n\t);\n\n\tconst tagCandidates = Array.from(\n\t\t(() => {\n\t\t\tconst ret = new Set(\n\t\t\t\tdefs.flatMap(({ tags }) => tags.map(({ label }) => label))\n\t\t\t);\n\n\t\t\ttags.forEach((selected) => ret.delete(selected));\n\t\t\treturn ret;\n\t\t})().keys()\n\t).sort();\n\n\tconst { hash } = useParams();\n\n\tconst loading = useMemo(() => !loaded, [loaded]);\n\n\treturn { loading, defs, tagCandidates, hash };\n};\n\nfunction VideoContainer() {\n\tconst { loading, defs, tagCandidates } = useVideoContainerHooks();\n\treturn loading ? (\n\t\t<Loader />\n\t) : (\n\t\t<React.Fragment>\n\t\t\t<VideoConditionForm tagCandidates={tagCandidates} />\n\t\t\t<VideoBody defs={defs} />\n\t\t</React.Fragment>\n\t);\n}\n\nexport function Videos() {\n\treturn (\n\t\t<Suspense fallback={<Loader />}>\n\t\t\t<VideoContainer />\n\t\t</Suspense>\n\t);\n}\n","import { DateTime } from 'luxon';\nimport type { LiveStyle, Thumbnails, VideoTag } from '../types';\nimport { defaultStyledTag } from '../types/utils';\nimport { fetchGamesJson, fetchLiveSeriesJson, fetchVideosJson } from './base';\n\nexport type VideoDef = {\n\tid: string;\n\tpublishedAt: number;\n\ttitle: string;\n\tdescription: string;\n\tthumbnails: Thumbnails;\n\ttags: VideoTag[];\n};\n\nexport const liveStyleTagFor = (style: LiveStyle) => {\n\tconst label = (() => {\n\t\tswitch (style) {\n\t\t\tcase 'broadcast':\n\t\t\t\treturn '生配信' as const;\n\t\t\tcase 'video':\n\t\t\t\treturn '動画' as const;\n\t\t\tcase 'short':\n\t\t\t\treturn 'ショート' as const;\n\t\t\tdefault: {\n\t\t\t\tconst _exhaust: never = style;\n\t\t\t\tthrow _exhaust;\n\t\t\t}\n\t\t}\n\t})();\n\treturn { label, style };\n};\n\nexport async function fetchVideoDefs(): Promise<VideoDef[]> {\n\tconst [noneTag, livesTag, seriesTag, gamesTag] = (\n\t\t['none', 'lives', 'series', 'games'] as const\n\t).map(defaultStyledTag);\n\tconst [videos, liveSeries, games] = await Promise.all([\n\t\t(async () => {\n\t\t\tconst { items: videos } = await fetchVideosJson();\n\t\t\treturn videos && videos.length > 0\n\t\t\t\t? videos.map(({ liveStyle, ...def }) => ({\n\t\t\t\t\t\tid: def.id.videoId,\n\t\t\t\t\t\tpublishedAt: DateTime.fromISO(def.snippet.publishedAt).toMillis(),\n\t\t\t\t\t\ttitle: def.snippet.title,\n\t\t\t\t\t\tdescription: def.snippet.description,\n\t\t\t\t\t\tthumbnails: def.snippet.thumbnails,\n\t\t\t\t\t\tliveSeriesId: def.liveSeriesId,\n\t\t\t\t\t\ttags: [\n\t\t\t\t\t\t\t...(liveStyle ? [liveStyleTagFor(liveStyle)] : []),\n\t\t\t\t\t\t\t...(def.tags?.map(livesTag) ?? []),\n\t\t\t\t\t\t],\n\t\t\t\t\t\t// TODO: データ整理ができたら旧タグを削除\n\t\t\t\t\t\t'tags.bak': def['tags.bak']?.map(noneTag) ?? [],\n\t\t\t\t\t}))\n\t\t\t\t: [];\n\t\t})(),\n\t\t(async () => {\n\t\t\tconst { items: liveSeries } = await fetchLiveSeriesJson();\n\t\t\treturn liveSeries.map(({ id, gameId, seriesTitle, tags }) => ({\n\t\t\t\tid,\n\t\t\t\tgameId,\n\t\t\t\ttags: [seriesTag(seriesTitle), ...tags.map(seriesTag)],\n\t\t\t}));\n\t\t})(),\n\t\t(async () => {\n\t\t\tconst { items: games } = await fetchGamesJson();\n\t\t\treturn games.map(({ id, platform, gameTitle, tags }) => ({\n\t\t\t\tid,\n\t\t\t\ttags: [\n\t\t\t\t\t...(platform ? [gamesTag(platform)] : []),\n\t\t\t\t\tgamesTag(gameTitle),\n\t\t\t\t\t...tags.map(gamesTag),\n\t\t\t\t],\n\t\t\t}));\n\t\t})(),\n\t] as const);\n\n\tconst gameMap = new Map(games.map((e) => [e.id, e] as const));\n\tconst seriesMap = new Map(\n\t\tliveSeries.map(\n\t\t\t(e) =>\n\t\t\t\t[\n\t\t\t\t\te.id,\n\t\t\t\t\t{\n\t\t\t\t\t\t...e,\n\t\t\t\t\t\ttags: [\n\t\t\t\t\t\t\t...e.tags,\n\t\t\t\t\t\t\t...(!e.gameId ? [] : (gameMap.get(e.gameId)?.tags ?? [])),\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t] as const\n\t\t)\n\t);\n\tconst ret: VideoDef[] = videos.map(\n\t\t({ ['tags.bak']: bak, tags, liveSeriesId, ...rest }) => ({\n\t\t\t...rest,\n\t\t\ttags: ((xs) => (xs.length > 0 ? xs : [noneTag('no tags')]))(\n\t\t\t\t[\n\t\t\t\t\t...tags,\n\t\t\t\t\t...(liveSeriesId ? (seriesMap.get(liveSeriesId)?.tags ?? []) : []),\n\t\t\t\t\t...bak,\n\t\t\t\t].filter(\n\t\t\t\t\t({ label: lhs }, ix, array) =>\n\t\t\t\t\t\t// ignores リストに入るものは除外\n\t\t\t\t\t\t!ignores.includes(lhs) &&\n\t\t\t\t\t\t// 重複ラベルは後ろ側を削除\n\t\t\t\t\t\tarray.slice(0, ix).find(({ label: rhs }) => lhs == rhs) == null\n\t\t\t\t)\n\t\t\t),\n\t\t})\n\t);\n\n\treturn ret;\n}\n\nconst ignores = ['―', 'live', 'taped'];\n","import { combineEpics } from 'redux-observable';\nimport { filter } from 'rxjs/operators';\n\nimport { DateTime } from 'luxon';\n\nimport type { Epic } from 'src/app';\nimport { withIndicator } from 'src/util';\n\nimport { videosActions } from '..';\nimport { fetchVideoDefs } from './fetch/videos';\n\nexport const fetchDefsEpic: Epic = (action$) =>\n\taction$.pipe(\n\t\tfilter(videosActions.init.match),\n\t\twithIndicator('videos/fetch', async () =>\n\t\t\tvideosActions.setList(await fetchVideoDefs())\n\t\t)\n\t);\n\nexport const setDefaultConditionEpic: Epic = (action$) =>\n\taction$.pipe(\n\t\tfilter(videosActions.init.match),\n\t\twithIndicator('videos/default-condition', async () =>\n\t\t\tvideosActions.setConditionDateFrom(\n\t\t\t\tDateTime.now().minus({ months: 3 }).toMillis()\n\t\t\t)\n\t\t)\n\t);\n\nexport const epic = combineEpics(fetchDefsEpic, setDefaultConditionEpic);\n","import { registerEpic } from 'src/app';\nimport { Videos } from './component/Videos';\nimport { epic } from './core/epic';\n\nregisterEpic(epic);\nexport default Videos;\n"],"names":["videosJson","process","liveSeriesJson","gamesJson","fetchVideosJson","fetch","res","json","ret","fetchLiveSeriesJson","fetchGamesJson","defaultStyledTag","defaultStyle","tag","style","label","createVideoUrl","videoId","Loader","TitleStyledTypography","styled","Typography","display","overflow","lineClamp","WebkitLineClamp","boxOrient","WebkitBoxOrient","fontSize","TitleTypography","props","Tooltip","title","children","gutterBottom","variant","PublishedAtTypography","color","align","DescriptionStyledTypography","DescriptionTypography","LinkToMovieButton","Button","href","target","referrerPolicy","RightAlignedCardActions","CardActions","justifyContent","VideoThumbnail","imageUrl","alt","CardActionArea","CardMedia","component","src","VideoChip","deletable","findable","dispatch","useAppDispatch","findTag","useCallback","videosActions","deleteTag","chipColor","useMemo","useVideoChipHooks","TagChip","size","icon","Search","clickable","onClick","onDelete","VideoTagsBox","Box","Chip","VideoTags","tags","map","Spacer","theme","height","width","margin","spacing","VideoCard","def","thumb","thumbnails","high","publishedAt","DateTime","setZone","toFormat","Card","url","id","CardContent","description","ScrollToTop","IconButton","animateScroll","ArrowDropUp","VideoBody","defs","useState","loaded","setLoaded","fetchNext","next","length","slice","useEffect","itemsPerRow","useValueWithMediaQuery","xs","sm","md","lg","xl","useVideoBodyHooks","Container","dataLength","hasMore","loader","Grid","container","ix","item","VideoConditionFormPaper","Paper","marginTop","marginBottom","padding","VideoConditionForm","tagCandidates","useAppSelector","state","videos","condition","tagLabels","dateSpan","from","to","onChangeFrom","date","toMillis","console","error","onChangeTo","autocompleteValue","setAutocompleteValue","renderTagAutocompleteInput","params","TextField","onChangeTag","_event","value","reason","_details","onInputChangeTag","isOptionEqualToValue","option","useVideoConditionFormHooks","Autocomplete","options","renderInput","autoHighlight","autoSelect","blurOnSelect","clearOnBlur","onChange","event","details","onInputChange","inputValue","DatePicker","format","showDaysOutsideCurrentMonth","slotProps","actionBar","actions","VideoContainer","toBeInitialized","setToBeInitialized","list","filter","d","labels","every","selected","includes","sort","lhs","rhs","Array","Set","flatMap","forEach","delete","keys","hash","useParams","loading","useVideoContainerHooks","liveStyleTagFor","fetchVideoDefs","noneTag","livesTag","seriesTag","gamesTag","Promise","all","items","liveStyle","snippet","liveSeriesId","liveSeries","gameId","seriesTitle","games","platform","gameTitle","gameMap","Map","e","seriesMap","get","bak","rest","array","ignores","find","epic","combineEpics","action$","pipe","withIndicator","setList","minus","months","registerEpic","Suspense","fallback"],"sourceRoot":""}