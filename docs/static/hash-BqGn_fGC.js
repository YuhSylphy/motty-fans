import{p as c}from"./pako.esm-BoIYYwlZ.js";import{m as d,i as a,n as u}from"./ducks-B4GhlEk-.js";import{D as l}from"./datetime-BT3pVNmC.js";function f(o){return btoa(String.fromCharCode(...o))}function g(o){return Uint8Array.from(atob(o),e=>e.charCodeAt(0))}function m(o){return o.replace(/\+/g,"-").replace(/\//g,"_").replace(/=*$/g,"")}function b(o){const e=o.replace(/-/g,"+").replace(/_/g,"/"),n=e.length%4;return n>0?e+"====".slice(n):e}function p(o){let e=0;console.debug(`encode: ${e++}`,o);const n=d(o);console.debug(`encode: ${e++}`,n);const t=JSON.stringify(n);console.debug(`encode: ${e++}`,t);const r=c.deflateRaw(t,{raw:!0});console.debug(`encode: ${e++}`,r);const s=f(r);console.debug(`encode: ${e++}`,s);const i=m(s);return console.debug(`encode: ${e++}`,i),i}function y(o){let e=0;console.debug(`decode: ${e++}`,o);try{const n=b(o);console.debug(`decode: ${e++}`,n);const t=g(n);console.debug(`decode: ${e++}`,t);const r=c.inflateRaw(t,{to:"string",raw:!0});console.debug(`decode: ${e++}`,r);const s=JSON.parse(r);if(console.debug(`decode: ${e++}`,s),!a(s))throw Error(`content is not a VideoFinderCondition: ${JSON.stringify(s)}`);const i=u(s);return console.debug(`decode: ${e++}`,i),i}catch(n){throw Error("failed to decode conditions hash",{cause:n})}}function S(){return p(h())}function h(){return{tags:[],dateSpan:{from:l.now().minus({months:3}).toMillis(),to:null}}}function z(o){const e=location.href.match(/^(https?:\/\/[^/]+\/[^/]+\/videos)(?:\/([^/]*))?$/);if(!e||e.length===0){console.warn(`hash set in unexpected url: ${location.href}`);return}const[,n,t]=e;o!==t&&history.pushState("","",`${n}/${o}`)}export{S as a,h as c,y as d,p as e,z as s};
