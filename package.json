{
  "name": "motty-fans",
  "homepage": "https://yuhsylphy.github.io/motty-fans/",
  "version": "0.1.0",
  "private": true,
  "packageManager": "yarn@1.22.22+sha1.ac34549e6aa8e7ead463a7407e1c7390f61a6610",
  "dependencies": {
    "@date-io/luxon": "^3.0.0",
    "@emotion/react": "^11.13.0",
    "@emotion/styled": "^11.13.0",
    "@fortawesome/fontawesome-svg-core": "^6.1.2",
    "@fortawesome/free-brands-svg-icons": "^6.1.2",
    "@fortawesome/free-solid-svg-icons": "^6.1.2",
    "@fortawesome/react-fontawesome": "^0.2.0",
    "@mui/icons-material": "^5.16.4",
    "@mui/lab": "^5.0.0-alpha.172",
    "@mui/material": "^5.16.4",
    "@mui/styles": "^5.16.4",
    "@mui/x-date-pickers": "^7.11.0",
    "@reduxjs/toolkit": "^1.8.1",
    "buffer": "^6.0.3",
    "dagre-d3": "0.6.4",
    "dexie": "^3.2.2",
    "dotenv-cli": "^5.1.0",
    "github-markdown-css": "^5.1.0",
    "luxon": "^3.4.4",
    "pako": "^2.0.4",
    "react": "^18.0.0",
    "react-dom": "^18.0.0",
    "react-helmet-async": "^1.3.0",
    "react-infinite-scroll-component": "^6.1.0",
    "react-markdown": "^8.0.2",
    "react-redux": "^7.2.8",
    "react-router": "^6.3.0",
    "react-router-dom": "^6.3.0",
    "react-scripts": "5.0.1",
    "react-scroll": "^1.8.7",
    "redux-observable": "^2.0.0",
    "rxjs": "^7.5.5",
    "typescript": "^5.5.4"
  },
  "devDependencies": {
    "@eslint/compat": "^1.1.1",
    "@eslint/js": "^9.7.0",
    "@testing-library/jest-dom": "^5.16.4",
    "@testing-library/react": "^13.0.1",
    "@testing-library/user-event": "^14.1.0",
    "@types/dagre-d3": "0.6.2",
    "@types/eslint__js": "^8.42.3",
    "@types/jest": "^27.4.1",
    "@types/luxon": "^3.4.2",
    "@types/node": "^20.14.11",
    "@types/pako": "^2.0.0",
    "@types/react": "^18.0.5",
    "@types/react-dom": "^18.0.0",
    "@types/react-helmet-async": "^1.0.3",
    "@types/react-redux": "^7.1.24",
    "@types/react-scroll": "^1.8.3",
    "cpx": "^1.5.0",
    "eslint": "^9.7.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-prettier": "^5.2.1",
    "eslint-plugin-react": "^7.35.0",
    "eslint-plugin-react-hooks": "^5.1.0-rc-512b09b2-20240718",
    "globals": "^15.8.0",
    "mkdirp": "^3.0.1",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.3.3",
    "rimraf": "^6.0.1",
    "ts-node": "^10.9.2",
    "typescript-eslint": "^7.17.0"
  },
  "resolutions": {
    "@types/react": "^18.0.5"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "scripts": {
    "start": "yarn lint && dotenv -e .env.dev react-scripts start",
    "build": "yarn lint && dotenv -e .env.prod react-scripts build",
    "test": "yarn lint && dotenv -e .env.test react-scripts test",
    "eject": "react-scripts eject",
    "lint:prettier": "prettier --write src",
    "lint:prettier:assets": "prettier --write public/assets/",
    "lint": "eslint --fix src",
    "update-browserslist": "npx browserslist@latest --update-db",
    "refetch": "run-s refetch:*",
    "refetch:dotnetrun": "cd work/fetch-youtube-videos && (cat ../last-fetched | xargs -I {} dotnet run -- app fetch -f \"{}\") && dotnet run -- app merge -i \"../../public/assets/videos/videos.json\"",
    "refetch:date": "node -p \"require('luxon').DateTime.now().toFormat('yyyy-LL-dd HH:mm:ss ZZ')\" > work/last-fetched",
    "refetch:cp": "ls work/fetch-youtube-videos/Data/Merged | tail -n 1 | xargs -I {} node -e \"require('fs').copyFileSync('work/fetch-youtube-videos/Data/Merged/{}', 'public/assets/videos/videos.json')\"",
    "refetch:prettier": "run-s lint:prettier:assets",
    "export:video.tsv": "sh -c \"jq '.items[] | [.id.videoId,.snippet.publishedAt,.snippet.title,.tags] | flatten | @tsv' -r ./public/assets/videos/videos.json > ./work/videos.tsv\"",
    "fetch-sheets": "run-s fetch-sheets:*",
    "fetch-sheets:lint": "eslint --fix scripts",
    "fetch-sheets:spreadsheet": "dotenv -e .env.dev ts-node scripts/fetch-sheets.ts",
    "fetch-sheets:merge": "ts-node scripts/merge-lives.ts",
    "fetch-sheets:prettier": "run-s lint:prettier:assets"
  }
}
